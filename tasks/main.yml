- name: Test for domain group
  command: grep '\s*\[domain\/[^]]*]' /etc/sssd/sssd.conf
  register: test_grep_domain
  ignore_errors: true
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sssd_memcache_timeout | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sssd_memcache_timeout
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80910-3
  - NIST-800-53-IA-5(10)
  - NIST-800-53-IA-5(13)

- name: Add default domain group (if no domain there)
  ini_file:
    path: /etc/sssd/sssd.conf
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
    create: true
    mode: 384
  with_items:
  - section: sssd
    option: domains
    value: default
  - section: domain/default
    option: id_provider
    value: files
  when:
  - test_grep_domain.stdout is defined
  - test_grep_domain.stdout | length < 1
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sssd_memcache_timeout | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sssd_memcache_timeout
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80910-3
  - NIST-800-53-IA-5(10)
  - NIST-800-53-IA-5(13)

- name: Configure SSSD's Memory Cache to Expire
  ini_file:
    dest: /etc/sssd/sssd.conf
    section: nss
    option: memcache_timeout
    value: '{{ var_sssd_memcache_timeout }}'
    create: true
    mode: 384
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sssd_memcache_timeout | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sssd_memcache_timeout
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80910-3
  - NIST-800-53-IA-5(10)
  - NIST-800-53-IA-5(13)

- name: Test for domain group
  command: grep '\s*\[domain\/[^]]*]' /etc/sssd/sssd.conf
  register: test_grep_domain
  ignore_errors: true
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sssd_offline_cred_expiration | bool
  - medium_severity | bool
  - configure_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sssd_offline_cred_expiration
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80911-1
  - NIST-800-53-IA-5(13)

- name: Add default domain group (if no domain there)
  ini_file:
    path: /etc/sssd/sssd.conf
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
    create: true
    mode: 384
  with_items:
  - section: sssd
    option: domains
    value: default
  - section: domain/default
    option: id_provider
    value: files
  when:
  - test_grep_domain.stdout is defined
  - test_grep_domain.stdout | length < 1
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sssd_offline_cred_expiration | bool
  - medium_severity | bool
  - configure_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sssd_offline_cred_expiration
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80911-1
  - NIST-800-53-IA-5(13)

- name: Configure SSD to Expire Offline Credentials
  ini_file:
    dest: /etc/sssd/sssd.conf
    section: pam
    option: offline_credentials_expiration
    value: 1
    create: true
    mode: 384
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sssd_offline_cred_expiration | bool
  - medium_severity | bool
  - configure_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sssd_offline_cred_expiration
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80911-1
  - NIST-800-53-IA-5(13)

- name: Ensure abrt is removed
  package:
    name: abrt
    state: absent
  tags:
  - package_abrt_removed
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80948-3
  when:
  - disable_strategy | bool
  - package_abrt_removed | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Disable SSH Support for User Known Hosts
  lineinfile:
    create: true
    dest: /etc/ssh/sshd_config
    regexp: ^IgnoreUserKnownHosts
    line: IgnoreUserKnownHosts yes
    insertbefore: ^Match
    firstmatch: true
    validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sshd_disable_user_known_hosts | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_user_known_hosts
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80902-0
  - NIST-800-171-3.1.12
  - NIST-800-53-AC-17(b)
  - NIST-800-53-CM-6(a)

- name: Disable SSH Access via Empty Passwords
  lineinfile:
    create: true
    dest: /etc/ssh/sshd_config
    regexp: ^PermitEmptyPasswords
    line: PermitEmptyPasswords no
    validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_disable_empty_passwords | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_empty_passwords
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80896-4
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - NIST-800-53-AC-3
  - NIST-800-53-AC-6
  - NIST-800-53-AC-17(b)
  - NIST-800-53-CM-6(b)
  - CJIS-5.5.6

- name: Enable SSH Warning Banner
  lineinfile:
    create: true
    dest: /etc/ssh/sshd_config
    regexp: ^Banner
    line: Banner /etc/issue
    validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sshd_enable_warning_banner | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_enable_warning_banner
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80905-3
  - NIST-800-171-3.1.9
  - NIST-800-53-AC-8(a)
  - NIST-800-53-AC-8(b)
  - NIST-800-53-AC-8(c)(1)
  - NIST-800-53-AC-8(c)(2)
  - NIST-800-53-AC-8(c)(3)
  - NIST-800-53-AC-17(b)
  - CJIS-5.5.6

- name: Disable Kerberos Authentication
  lineinfile:
    create: true
    dest: /etc/ssh/sshd_config
    regexp: (?i)^#?kerberosauthentication
    line: KerberosAuthentication no
    validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_disable_kerb_auth | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_kerb_auth
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80898-0
  - NIST-800-171-3.1.12
  - NIST-800-53-CM-6(c)

- name: Disable SSH Support for .rhosts Files
  lineinfile:
    create: true
    dest: /etc/ssh/sshd_config
    regexp: ^IgnoreRhosts
    line: IgnoreRhosts yes
    validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sshd_disable_rhosts | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_rhosts
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80899-8
  - NIST-800-171-3.1.12
  - NIST-800-53-AC-3
  - NIST-800-53-AC-17(b)
  - NIST-800-53-CM-6(a)
  - CJIS-5.5.6

- name: Disable SSH Support for Rhosts RSA Authentication
  lineinfile:
    create: true
    dest: /etc/ssh/sshd_config
    regexp: ^RhostsRSAAuthentication
    line: RhostsRSAAuthentication no
    validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sshd_disable_rhosts_rsa | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_rhosts_rsa
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80900-4
  - NIST-800-171-3.1.12
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-17(b)

- name: Disable Host-Based Authentication
  lineinfile:
    create: true
    dest: /etc/ssh/sshd_config
    regexp: ^HostbasedAuthentication
    line: HostbasedAuthentication no
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - disable_host_auth | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - disable_host_auth
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80786-7
  - NIST-800-171-3.1.12
  - NIST-800-53-AC-3
  - NIST-800-53-AC-17
  - NIST-800-53-CM-6(b)
  - CJIS-5.5.6

- name: Disable GSSAPI Authentication
  lineinfile:
    create: true
    dest: /etc/ssh/sshd_config
    regexp: (?i)^#?gssapiauthentication
    line: GSSAPIAuthentication no
    validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_disable_gssapi_auth | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_gssapi_auth
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80897-2
  - NIST-800-171-3.1.12
  - NIST-800-53-AC-17(b)
  - NIST-800-53-CM-6(c)

- name: Disable SSH Root Login
  lineinfile:
    create: true
    dest: /etc/ssh/sshd_config
    regexp: ^PermitRootLogin
    line: PermitRootLogin no
    insertafter: (?i)^#?authentication
    validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_disable_root_login | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_root_login
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80901-2
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - NIST-800-53-AC-3
  - NIST-800-53-AC-6(2)
  - NIST-800-53-AC-17(b)
  - NIST-800-53-IA-2
  - NIST-800-53-IA-2(5)
  - CJIS-5.5.6

- name: Configure Kerberos to use System Crypto Policy
  file:
    src: /etc/crypto-policies/back-ends/krb5.config
    path: /etc/krb5.conf.d/crypto-policies
    state: link
  tags:
  - configure_kerberos_crypto_policy
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80936-8
  when:
  - configure_strategy | bool
  - reboot_required | bool
  - configure_kerberos_crypto_policy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Configure System Cryptography Policy
  lineinfile:
    path: /etc/crypto-policies/config
    regexp: ^(?!#)(\S+)$
    line: '{{ var_system_crypto_policy }}'
    create: true
  tags:
  - configure_crypto_policy
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80935-0
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - configure_crypto_policy | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Verify that Crypto Policy is Set (runtime)
  command: /usr/bin/update-crypto-policies --set {{ var_system_crypto_policy }}
  tags:
  - configure_crypto_policy
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80935-0
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - configure_crypto_policy | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Configure SSH to use System Crypto Policy
  lineinfile:
    dest: /etc/sysconfig/sshd
    state: absent
    regexp: ^\s*CRYPTO_POLICY.*$
  tags:
  - configure_ssh_crypto_policy
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80939-2
  when:
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - configure_ssh_crypto_policy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Configure Libreswan to use System Crypto Policy
  lineinfile:
    path: /etc/ipsec.conf
    line: include /etc/crypto-policies/back-ends/libreswan.config
    create: true
  tags:
  - configure_libreswan_crypto_policy
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80937-6
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - configure_libreswan_crypto_policy | bool
  - low_disruption | bool
  - low_complexity | bool

- name: 'Set fact: Package manager reinstall command (dnf)'
  set_fact:
    package_manager_reinstall_cmd: dnf reinstall -y
  when:
  - ansible_distribution == "Fedora"
  - high_complexity | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - rpm_verify_hashes | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  tags:
  - rpm_verify_hashes
  - high_severity
  - unknown_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80857-6
  - PCI-DSS-Req-11.5
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(3)
  - NIST-800-53-SI-7(1)
  - CJIS-5.10.4.1

- name: 'Set fact: Package manager reinstall command (yum)'
  set_fact:
    package_manager_reinstall_cmd: yum reinstall -y
  when:
  - (ansible_distribution == "RedHat" or ansible_distribution == "OracleLinux")
  - high_complexity | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - rpm_verify_hashes | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  tags:
  - rpm_verify_hashes
  - high_severity
  - unknown_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80857-6
  - PCI-DSS-Req-11.5
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(3)
  - NIST-800-53-SI-7(1)
  - CJIS-5.10.4.1

- name: Read files with incorrect hash
  shell: 'set -o pipefail

    rpm -Va | grep -E ''^..5.* /(bin|sbin|lib|lib64|usr)/'' | awk ''{print $NF}''

    '
  args:
    warn: false
    executable: /bin/bash
  register: files_with_incorrect_hash
  changed_when: false
  when:
  - (package_manager_reinstall_cmd is defined)
  - high_complexity | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - rpm_verify_hashes | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  check_mode: false
  tags:
  - rpm_verify_hashes
  - high_severity
  - unknown_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80857-6
  - PCI-DSS-Req-11.5
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(3)
  - NIST-800-53-SI-7(1)
  - CJIS-5.10.4.1

- name: Reinstall packages of files with incorrect hash
  shell: '{{ package_manager_reinstall_cmd }} $(rpm -qf ''{{ item }}'')'
  args:
    warn: false
  with_items: '{{ files_with_incorrect_hash.stdout_lines }}'
  when:
  - (package_manager_reinstall_cmd is defined and (files_with_incorrect_hash.stdout_lines | length > 0))
  - high_complexity | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - rpm_verify_hashes | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  tags:
  - rpm_verify_hashes
  - high_severity
  - unknown_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80857-6
  - PCI-DSS-Req-11.5
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(3)
  - NIST-800-53-SI-7(1)
  - CJIS-5.10.4.1

- name: Find All yum Repositories
  find:
    paths: /etc/yum.repos.d/
    patterns: '*.repo'
    contains: ^\[.+]$
  register: yum_find
  tags:
  - ensure_gpgcheck_never_disabled
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80792-5
  - PCI-DSS-Req-6.2
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - CJIS-5.10.4.1
  when:
  - ensure_gpgcheck_never_disabled | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Ensure gpgcheck Enabled For All yum Package Repositories
  with_items: '{{ yum_find.files }}'
  lineinfile:
    create: true
    dest: '{{ item.path }}'
    regexp: ^gpgcheck
    line: gpgcheck=1
  tags:
  - ensure_gpgcheck_never_disabled
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80792-5
  - PCI-DSS-Req-6.2
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - CJIS-5.10.4.1
  when:
  - ensure_gpgcheck_never_disabled | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Security patches are up to date
  package:
    name: '*'
    state: latest
  tags:
  - security_patches_up_to_date
  - high_severity
  - skip_ansible_lint
  - patch_strategy
  - low_complexity
  - high_disruption
  - reboot_required
  - CCE-80865-9
  - PCI-DSS-Req-6.2
  - NIST-800-53-SI-2
  - NIST-800-53-SI-2(c)
  - NIST-800-53-MA-1(b)
  - CJIS-5.10.4.1
  when:
  - security_patches_up_to_date | bool
  - reboot_required | bool
  - high_severity | bool
  - skip_ansible_lint | bool
  - high_disruption | bool
  - patch_strategy | bool
  - low_complexity | bool

- name: Read permission of GPG key directory
  stat:
    path: /etc/pki/rpm-gpg/
  register: gpg_key_directory_permission
  check_mode: false
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80795-8
  - PCI-DSS-Req-6.2
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Read signatures in GPG key
  shell: 'set -o pipefail

    gpg --show-key --with-colons "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release" | grep "^fpr" | cut -d ":" -f 10

    '
  args:
    warn: false
    executable: /bin/bash
  changed_when: false
  register: gpg_fingerprints
  check_mode: false
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80795-8
  - PCI-DSS-Req-6.2
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Set Fact - Valid fingerprints
  set_fact:
    gpg_valid_fingerprints: ("567E347AD0044ADE55BA8A5F199E2F91FD431D51" "43A6E49C4A38F4BE9ABF2A5345689C882FA658E0")
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80795-8
  - PCI-DSS-Req-6.2
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Import RedHat GPG key
  rpm_key:
    state: present
    key: /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
  when:
  - gpg_key_directory_permission.stat.mode <= '0755'
  - ( gpg_fingerprints.stdout_lines | difference(gpg_valid_fingerprints)) | length == 0
  - gpg_fingerprints.stdout_lines | length > 0
  - ansible_distribution == "RedHat"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80795-8
  - PCI-DSS-Req-6.2
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - CJIS-5.10.4.1

- name: Check existence of yum on Fedora
  stat:
    path: /etc/yum.conf
  register: yum_config_file
  check_mode: false
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - ensure_gpgcheck_globally_activated | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_globally_activated
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80790-9
  - PCI-DSS-Req-6.2
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - CJIS-5.10.4.1

- name: Ensure GPG check is globally activated (yum)
  ini_file:
    dest: /etc/yum.conf
    section: main
    option: gpgcheck
    value: 1
    create: false
  when:
  - (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or yum_config_file.stat.exists)
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - ensure_gpgcheck_globally_activated | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_globally_activated
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80790-9
  - PCI-DSS-Req-6.2
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - CJIS-5.10.4.1

- name: Ensure GPG check is globally activated (dnf)
  ini_file:
    dest: /etc/dnf/dnf.conf
    section: main
    option: gpgcheck
    value: 1
    create: false
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - ensure_gpgcheck_globally_activated | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_globally_activated
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80790-9
  - PCI-DSS-Req-6.2
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - CJIS-5.10.4.1

- name: Check existence of yum on Fedora
  stat:
    path: /etc/yum.conf
  register: yum_config_file
  check_mode: false
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - ensure_gpgcheck_local_packages | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_local_packages
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80791-7
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11

- name: Ensure GPG check Enabled for Local Packages (Yum)
  ini_file:
    dest: /etc/yum.conf
    section: main
    option: localpkg_gpgcheck
    value: 1
    create: true
  when:
  - (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or yum_config_file.stat.exists)
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - ensure_gpgcheck_local_packages | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_local_packages
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80791-7
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11

- name: Ensure GPG check Enabled for Local Packages (DNF)
  ini_file:
    dest: /etc/dnf/dnf.conf
    section: main
    option: localpkg_gpgcheck
    value: 1
    create: true
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - ensure_gpgcheck_local_packages | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_local_packages
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80791-7
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11

- name: Prevent user modification of GNOME Session idle-delay
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/desktop/session/idle-delay
    line: /org/gnome/desktop/session/idle-delay
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - dconf_gnome_session_idle_user_locks | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - no_reboot_needed | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_session_idle_user_locks
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80781-8
  - NIST-800-171-3.1.10
  - NIST-800-53-AC-11(a)

- name: Set GNOME3 Screensaver Lock Delay After Activation Period
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/desktop/screensaver
    option: lock-delay
    value: uint32 5
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - dconf_gnome_screensaver_lock_delay | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_screensaver_lock_delay
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80776-8
  - PCI-DSS-Req-8.1.8
  - NIST-800-171-3.1.10
  - NIST-800-53-AC-11(a)

- name: Prevent user modification of GNOME lock-delay
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/desktop/screensaver/lock-delay
    line: /org/gnome/desktop/screensaver/lock-delay
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - dconf_gnome_screensaver_lock_delay | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_screensaver_lock_delay
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80776-8
  - PCI-DSS-Req-8.1.8
  - NIST-800-171-3.1.10
  - NIST-800-53-AC-11(a)

- name: Disable Full Username on Splash Screen
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/desktop/screensaver
    option: show-full-name-in-top-bar
    value: 'false'
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - dconf_gnome_screensaver_user_info | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_screensaver_user_info
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80779-2

- name: Prevent user modification of GNOME show-full-name-in-top-bar
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/desktop/screensaver/show-full-name-in-top-bar
    line: /org/gnome/desktop/screensaver/show-full-name-in-top-bar
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - dconf_gnome_screensaver_user_info | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_screensaver_user_info
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80779-2

- name: Prevent user modification of GNOME lock-delay
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/desktop/screensaver/lock-delay
    line: /org/gnome/desktop/screensaver/lock-delay
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - dconf_gnome_screensaver_user_locks | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_screensaver_user_locks
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80780-0
  - NIST-800-171-3.1.10
  - NIST-800-53-AC-11(a)

- name: Enable GNOME3 Screensaver Idle Activation
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/desktop/screensaver
    option: idle_activation_enabled
    value: 'true'
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - dconf_gnome_screensaver_idle_activation_enabled | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_screensaver_idle_activation_enabled
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80774-3
  - PCI-DSS-Req-8.1.8
  - NIST-800-171-3.1.10
  - NIST-800-53-AC-11(a)
  - CJIS-5.5.5

- name: Prevent user modification of GNOME idle_activation_enabled
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/desktop/screensaver/idle-activation-enabled
    line: /org/gnome/desktop/screensaver/idle-activation-enabled
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - dconf_gnome_screensaver_idle_activation_enabled | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_screensaver_idle_activation_enabled
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80774-3
  - PCI-DSS-Req-8.1.8
  - NIST-800-171-3.1.10
  - NIST-800-53-AC-11(a)
  - CJIS-5.5.5

- name: Implement Blank Screensaver
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/desktop/screensaver
    option: picture-uri
    value: string ''
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - dconf_gnome_screensaver_mode_blank | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_screensaver_mode_blank
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80778-4
  - PCI-DSS-Req-8.1.8
  - NIST-800-171-3.1.10
  - NIST-800-53-AC-11(b)
  - CJIS-5.5.5

- name: Prevent user modification of GNOME picture-uri
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/desktop/screensaver/picture-uri
    line: /org/gnome/desktop/screensaver/picture-uri
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - dconf_gnome_screensaver_mode_blank | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_screensaver_mode_blank
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80778-4
  - PCI-DSS-Req-8.1.8
  - NIST-800-171-3.1.10
  - NIST-800-53-AC-11(b)
  - CJIS-5.5.5

- name: Set GNOME3 Screensaver Inactivity Timeout
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/desktop/screensaver
    option: idle-delay
    value: '{{ inactivity_timeout_value }}'
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - dconf_gnome_screensaver_idle_delay | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_screensaver_idle_delay
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80775-0
  - PCI-DSS-Req-8.1.8
  - NIST-800-171-3.1.10
  - NIST-800-53-AC-11(a)
  - CJIS-5.5.5

- name: Prevent user modification of GNOME idle-delay
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/desktop/screensaver/idle-delay
    line: /org/gnome/desktop/screensaver/idle-delay
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - dconf_gnome_screensaver_idle_delay | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_screensaver_idle_delay
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80775-0
  - PCI-DSS-Req-8.1.8
  - NIST-800-171-3.1.10
  - NIST-800-53-AC-11(a)
  - CJIS-5.5.5

- name: Enable GNOME3 Screensaver Lock After Idle Period
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/desktop/screensaver
    option: lock-enabled
    value: 'true'
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - dconf_gnome_screensaver_lock_enabled | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_screensaver_lock_enabled
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80777-6
  - PCI-DSS-Req-8.1.8
  - NIST-800-171-3.1.10
  - NIST-800-53-AC-11(b)
  - CJIS-5.5.5

- name: Prevent user modification of GNOME lock-enabled
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/desktop/screensaver/lock-enabled
    line: /org/gnome/desktop/screensaver/lock-enabled
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - dconf_gnome_screensaver_lock_enabled | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_screensaver_lock_enabled
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80777-6
  - PCI-DSS-Req-8.1.8
  - NIST-800-171-3.1.10
  - NIST-800-53-AC-11(b)
  - CJIS-5.5.5

- name: Disable User Administration in GNOME3
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/desktop/lockdown
    option: user-administration-disabled
    value: 'true'
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - dconf_gnome_disable_user_admin | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_disable_user_admin
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80769-3
  - NIST-800-171-3.1.5

- name: Prevent user modification of GNOME3 Thumbnailers
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/desktop/lockdown/user-administration-disabled
    line: /org/gnome/desktop/lockdown/user-administration-disabled
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - dconf_gnome_disable_user_admin | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_disable_user_admin
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80769-3
  - NIST-800-171-3.1.5

- name: Disable GDM Automatic Login
  ini_file:
    dest: /etc/gdm/custom.conf
    section: daemon
    option: AutomaticLoginEnable
    value: 'false'
    no_extra_spaces: true
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - gnome_gdm_disable_automatic_login | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - gnome_gdm_disable_automatic_login
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80823-8
  - NIST-800-171-3.1.1
  - NIST-800-53-CM-6(b)

- name: Enable the GNOME3 Login Number of Failures
  ini_file:
    dest: /etc/dconf/db/gdm.d/00-security-settings
    section: org/gnome/login-screen
    option: allowed-failures
    value: '3'
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - dconf_gnome_login_retries | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_login_retries
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80771-9
  - NIST-800-171-3.1.8

- name: Prevent user modification of GNOME3 Login Number of Failures
  lineinfile:
    path: /etc/dconf/db/gdm.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/login-screen/allowed-failures
    line: /org/gnome/login-screen/allowed-failures
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - dconf_gnome_login_retries | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_login_retries
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80771-9
  - NIST-800-171-3.1.8

- name: Disable GDM Guest Login
  ini_file:
    dest: /etc/gdm/custom.conf
    section: daemon
    option: TimedLoginEnable
    value: 'false'
    no_extra_spaces: true
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - gnome_gdm_disable_guest_login | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - gnome_gdm_disable_guest_login
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80824-6
  - NIST-800-171-3.1.1
  - NIST-800-53-CM-6(b)

- name: Remove the existing "use textfile backend" directive from the config - it may not be at the file's very top
  lineinfile:
    path: /etc/dconf/profile/user
    regexp: ^service-db:keyfile/user.*
    state: absent
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - dconf_use_text_backend | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - dconf_use_text_backend
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80782-6

- name: Insert the " use textfiles backend" directive at the top of the config file
  lineinfile:
    path: /etc/dconf/profile/user
    regexp: ^service-db:keyfile/user$
    line: service-db:keyfile/user
    insertbefore: BOF
    create: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - dconf_use_text_backend | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - dconf_use_text_backend
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80782-6

- name: Set rsyslog remote loghost
  lineinfile:
    dest: /etc/rsyslog.conf
    regexp: ^\*\.\*
    line: '*.* @@{{ rsyslog_remote_loghost_address }}'
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - rsyslog_remote_loghost | bool
  - low_complexity | bool
  tags:
  - rsyslog_remote_loghost
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80863-4
  - NIST-800-53-AU-3(2)
  - NIST-800-53-AU-4(1)
  - NIST-800-53-AU-9

- name: Enable service firewalld
  service:
    name: firewalld
    enabled: 'yes'
    state: started
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_firewalld_enabled | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_firewalld_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80877-4
  - NIST-800-171-3.1.3
  - NIST-800-171-3.4.7
  - NIST-800-53-CM-6(b)

- name: Configure SELinux Policy
  lineinfile:
    path: /etc/sysconfig/selinux
    regexp: ^SELINUXTYPE=
    line: SELINUXTYPE={{ var_selinux_policy_name }}
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - selinux_policytype | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - selinux_policytype
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80868-3
  - NIST-800-171-3.1.2
  - NIST-800-171-3.7.2
  - NIST-800-53-AC-3
  - NIST-800-53-AC-3(3)
  - NIST-800-53-AC-3(4)
  - NIST-800-53-AC-4
  - NIST-800-53-AC-6
  - NIST-800-53-AU-9
  - NIST-800-53-SI-6(a)

- name: Ensure SELinux State is Enforcing
  lineinfile:
    path: /etc/sysconfig/selinux
    regexp: ^SELINUX=
    line: SELINUX={{ var_selinux_state }}
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - low_disruption | bool
  - selinux_state | bool
  - low_complexity | bool
  tags:
  - selinux_state
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80869-1
  - NIST-800-171-3.1.2
  - NIST-800-171-3.7.2
  - NIST-800-53-AC-3
  - NIST-800-53-AC-3(3)
  - NIST-800-53-AC-3(4)
  - NIST-800-53-AC-4
  - NIST-800-53-AC-6
  - NIST-800-53-AU-9
  - NIST-800-53-SI-6(a)

- name: Add auth pam_faillock preauth even_deny_root before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent even_deny_root
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny_root
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80668-7
  - NIST-800-53-AC-7(b)
  when:
  - no_reboot_needed | bool
  - accounts_passwords_pam_faillock_deny_root | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add even_deny_root argument to auth pam_faillock preauth
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent even_deny_root
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny_root
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80668-7
  - NIST-800-53-AC-7(b)
  when:
  - no_reboot_needed | bool
  - accounts_passwords_pam_faillock_deny_root | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock authfail even_deny_root after pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail even_deny_root
    state: after
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny_root
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80668-7
  - NIST-800-53-AC-7(b)
  when:
  - no_reboot_needed | bool
  - accounts_passwords_pam_faillock_deny_root | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add even_deny_root argument to auth pam_faillock authfail
  pamd:
    name: '{{ item }}'
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail even_deny_root
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny_root
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80668-7
  - NIST-800-53-AC-7(b)
  when:
  - no_reboot_needed | bool
  - accounts_passwords_pam_faillock_deny_root | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny_root
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80668-7
  - NIST-800-53-AC-7(b)
  when:
  - no_reboot_needed | bool
  - accounts_passwords_pam_faillock_deny_root | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock preauth unlock_time before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80670-3
  - PCI-DSS-Req-8.1.7
  - NIST-800-171-3.1.8
  - NIST-800-53-AC-7(b)
  - CJIS-5.5.3
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add unlock_time argument to pam_faillock preauth
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80670-3
  - PCI-DSS-Req-8.1.7
  - NIST-800-171-3.1.8
  - NIST-800-53-AC-7(b)
  - CJIS-5.5.3
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock authfail unlock_interval after pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: after
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80670-3
  - PCI-DSS-Req-8.1.7
  - NIST-800-171-3.1.8
  - NIST-800-53-AC-7(b)
  - CJIS-5.5.3
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add unlock_time argument to auth pam_faillock authfail
  pamd:
    name: '{{ item }}'
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80670-3
  - PCI-DSS-Req-8.1.7
  - NIST-800-171-3.1.8
  - NIST-800-53-AC-7(b)
  - CJIS-5.5.3
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80670-3
  - PCI-DSS-Req-8.1.7
  - NIST-800-171-3.1.8
  - NIST-800-53-AC-7(b)
  - CJIS-5.5.3
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock preauth fail_interval before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_interval
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80669-5
  - NIST-800-53-AC-7(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_interval | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add fail_interval argument to auth pam_faillock preauth
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_interval
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80669-5
  - NIST-800-53-AC-7(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_interval | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock aufthfail fail_interval after pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}
    state: after
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_interval
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80669-5
  - NIST-800-53-AC-7(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_interval | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add fail_interval argument to auth pam_faillock authfail
  pamd:
    name: '{{ item }}'
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_interval
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80669-5
  - NIST-800-53-AC-7(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_interval | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_interval
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80669-5
  - NIST-800-53-AC-7(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_interval | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock preauth deny before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80667-9
  - PCI-DSS-Req-8.1.6
  - NIST-800-171-3.1.8
  - NIST-800-53-AC-7(a)
  - CJIS-5.5.3
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add deny argument to auth pam_faillock preauth
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80667-9
  - PCI-DSS-Req-8.1.6
  - NIST-800-171-3.1.8
  - NIST-800-53-AC-7(a)
  - CJIS-5.5.3
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock authfail deny after pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: after
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80667-9
  - PCI-DSS-Req-8.1.6
  - NIST-800-171-3.1.8
  - NIST-800-53-AC-7(a)
  - CJIS-5.5.3
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add deny argument to auth pam_faillock authfail
  pamd:
    name: '{{ item }}'
    type: auth
    new_type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80667-9
  - PCI-DSS-Req-8.1.6
  - NIST-800-171-3.1.8
  - NIST-800-53-AC-7(a)
  - CJIS-5.5.3
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80667-9
  - PCI-DSS-Req-8.1.6
  - NIST-800-171-3.1.8
  - NIST-800-53-AC-7(a)
  - CJIS-5.5.3
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable minlen is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*minlen
    line: minlen = {{ var_password_pam_minlen }}
  tags:
  - accounts_password_pam_minlen
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80656-2
  - PCI-DSS-Req-8.2.3
  - NIST-800-53-IA-5(1)(a)
  - CJIS-5.6.2.1.1
  when:
  - accounts_password_pam_minlen | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable dcredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*dcredit
    line: dcredit = {{ var_password_pam_dcredit }}
  tags:
  - accounts_password_pam_dcredit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80653-9
  - PCI-DSS-Req-8.2.3
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-53-IA-5(b)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-194
  when:
  - accounts_password_pam_dcredit | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable ocredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*ocredit
    line: ocredit = {{ var_password_pam_ocredit }}
  tags:
  - accounts_password_pam_ocredit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80663-8
  - NIST-800-53-IA-5(b)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_password_pam_ocredit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable lcredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*lcredit
    line: lcredit = {{ var_password_pam_lcredit }}
  tags:
  - accounts_password_pam_lcredit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80655-4
  - PCI-DSS-Req-8.2.3
  - NIST-800-53-IA-5(b)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_password_pam_lcredit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable ucredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*ucredit
    line: ucredit = {{ var_password_pam_ucredit }}
  tags:
  - accounts_password_pam_ucredit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80665-3
  - PCI-DSS-Req-8.2.3
  - NIST-800-53-IA-5(b)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_password_pam_ucredit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Set Password Retry Prompts Permitted Per-Session - system-auth (change)
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: (^.*\spam_pwquality.so\s.*retry\s*=\s*)(\S+)(.*$)
    replace: \g<1>{{ var_password_pam_retry }}\g<3>
  tags:
  - accounts_password_pam_retry
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80664-6
  - NIST-800-53-CM-6(b)
  - NIST-800-53-IA-5(c)
  - CJIS-5.5.3
  when:
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - accounts_password_pam_retry | bool
  - low_complexity | bool

- name: Set Password Retry Prompts Permitted Per-Session - system-auth (add)
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: ^.*\spam_pwquality.so\s(?!.*retry\s*=\s*).*$
    replace: \g<0> retry={{ var_password_pam_retry }}
  tags:
  - accounts_password_pam_retry
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80664-6
  - NIST-800-53-CM-6(b)
  - NIST-800-53-IA-5(c)
  - CJIS-5.5.3
  when:
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - accounts_password_pam_retry | bool
  - low_complexity | bool

- name: Ensure tmux is installed
  package:
    name: tmux
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - package_tmux_installed | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - package_tmux_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80644-8
  - NIST-800-171-3.1.10
  - NIST-800-53-AC-11(a)

- name: Disable service debug-shell
  service:
    name: debug-shell
    enabled: 'no'
    state: stopped
  register: service_result
  failed_when: service_result is failed and ('Could not find the requested service' not in service_result.msg)
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_debug-shell_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80876-6
  - NIST-800-171-3.4.5

- name: Disable socket of service debug-shell if applicable
  service:
    name: debug-shell.socket
    enabled: 'no'
    state: stopped
  register: socket_result
  failed_when: socket_result is failed and ('Could not find the requested service' not in socket_result.msg)
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_debug-shell_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80876-6
  - NIST-800-171-3.4.5

- name: Verify that Interactive Boot is Disabled in /etc/default/grub
  replace:
    dest: /etc/default/grub
    regexp: systemd.confirm_spawn=(1|yes|true|on)
    replace: systemd.confirm_spawn=no
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_disable_interactive_boot | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - grub2_disable_interactive_boot
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80826-1
  - NIST-800-171-3.1.2
  - NIST-800-171-3.4.5
  - NIST-800-53-SC-2
  - NIST-800-53-AC-3

- name: Verify that Interactive Boot is Disabled (runtime)
  command: /sbin/grubby --update-kernel=ALL --remove-args="systemd.confirm_spawn"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_disable_interactive_boot | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - grub2_disable_interactive_boot
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80826-1
  - NIST-800-171-3.1.2
  - NIST-800-171-3.4.5
  - NIST-800-53-SC-2
  - NIST-800-53-AC-3

- name: Set Interactive Session Timeout
  lineinfile:
    create: true
    dest: /etc/profile
    regexp: ^#?TMOUT
    line: TMOUT={{ var_accounts_tmout }}
  tags:
  - accounts_tmout
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80673-7
  - NIST-800-171-3.1.11
  - NIST-800-53-AC-12
  - NIST-800-53-SC-10
  when:
  - accounts_tmout | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Enable GNOME3 Login Warning Banner
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/login-screen
    option: banner-message-enable
    value: 'true'
    create: true
  tags:
  - dconf_gnome_banner_enabled
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80768-5
  - NIST-800-171-3.1.9
  - NIST-800-53-AC-8(a)
  - NIST-800-53-AC-8(b)
  - NIST-800-53-AC-8(c)(1)
  - NIST-800-53-AC-8(c)(2)
  - NIST-800-53-AC-8(c)(3)
  when:
  - dconf_gnome_banner_enabled | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Prevent user modification of GNOME banner-message-enabled
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/login-screen/banner-message-enable
    line: /org/gnome/login-screen/banner-message-enable
    create: true
  tags:
  - dconf_gnome_banner_enabled
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80768-5
  - NIST-800-171-3.1.9
  - NIST-800-53-AC-8(a)
  - NIST-800-53-AC-8(b)
  - NIST-800-53-AC-8(c)(1)
  - NIST-800-53-AC-8(c)(2)
  - NIST-800-53-AC-8(c)(3)
  when:
  - dconf_gnome_banner_enabled | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Set the GNOME3 Login Warning Banner Text
  file:
    path: /etc/dconf/db/{{ item }}
    owner: root
    group: root
    mode: 493
    state: directory
  with_items:
  - gdm.d
  - gdm.d/locks
  tags:
  - dconf_gnome_login_banner_text
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80770-1
  - NIST-800-171-3.1.9
  - NIST-800-53-AC-8(a)
  - NIST-800-53-AC-8(b)
  - NIST-800-53-AC-8(c)
  when:
  - dconf_gnome_login_banner_text | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Set the GNOME3 Login Warning Banner Text
  file:
    path: /etc/dconf/db/gdm.d/{{ item }}
    owner: root
    group: root
    mode: 420
    state: touch
  with_items:
  - 00-security-settings
  - locks/00-security-settings-lock
  tags:
  - dconf_gnome_login_banner_text
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80770-1
  - NIST-800-171-3.1.9
  - NIST-800-53-AC-8(a)
  - NIST-800-53-AC-8(b)
  - NIST-800-53-AC-8(c)
  when:
  - dconf_gnome_login_banner_text | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Set the GNOME3 Login Warning Banner Text
  ini_file:
    dest: /etc/dconf/db/gdm.d/00-security-settings
    section: org/gnome/login-screen
    option: banner-message-text
    value: string '{{ login_banner_text }}'
    create: true
  tags:
  - dconf_gnome_login_banner_text
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80770-1
  - NIST-800-171-3.1.9
  - NIST-800-53-AC-8(a)
  - NIST-800-53-AC-8(b)
  - NIST-800-53-AC-8(c)
  when:
  - dconf_gnome_login_banner_text | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Prevent user modification of the GNOME3 Login Warning Banner Text
  lineinfile:
    path: /etc/dconf/db/gdm.d/locks/00-security-settings-lock
    regexp: ^org/gnome/login-screen/banner-message-text$
    line: org/gnome/login-screen/banner-message-text
    create: true
    state: present
  tags:
  - dconf_gnome_login_banner_text
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80770-1
  - NIST-800-171-3.1.9
  - NIST-800-53-AC-8(a)
  - NIST-800-53-AC-8(b)
  - NIST-800-53-AC-8(c)
  when:
  - dconf_gnome_login_banner_text | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Set Password Minimum Length in login.defs
  lineinfile:
    dest: /etc/login.defs
    regexp: ^PASS_MIN_LEN *[0-9]*
    state: present
    line: PASS_MIN_LEN        {{ var_accounts_password_minlen_login_defs }}
  tags:
  - accounts_password_minlen_login_defs
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80652-1
  - NIST-800-171-3.5.7
  - NIST-800-53-IA-5(f)
  - NIST-800-53-IA-5(1)(a)
  - CJIS-5.6.2.1
  when:
  - accounts_password_minlen_login_defs | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Prevent Log In to Accounts With Empty Password - system-auth
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: nullok
  tags:
  - no_empty_passwords
  - high_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80841-0
  - PCI-DSS-Req-8.2.3
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - NIST-800-53-AC-6
  - NIST-800-53-IA-5(b)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - CJIS-5.5.2
  when:
  - no_empty_passwords | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - configure_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Prevent Log In to Accounts With Empty Password - password-auth
  replace:
    dest: /etc/pam.d/password-auth
    follow: true
    regexp: nullok
  tags:
  - no_empty_passwords
  - high_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80841-0
  - PCI-DSS-Req-8.2.3
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - NIST-800-53-AC-6
  - NIST-800-53-IA-5(b)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - CJIS-5.5.2
  when:
  - no_empty_passwords | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - configure_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Set architecture for audit delete_module tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_complexity | bool
  - audit_rules_kernel_module_loading_delete | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - low_complexity
  - no_reboot_needed
  - CCE-80711-5
  - PCI-DSS-Req-10.2.7
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*delete_module.*$
    patterns: '*.rules'
  register: find_delete_module
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_complexity | bool
  - audit_rules_kernel_module_loading_delete | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - low_complexity
  - no_reboot_needed
  - CCE-80711-5
  - PCI-DSS-Req-10.2.7
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_delete_module.matched is defined and find_delete_module.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_complexity | bool
  - audit_rules_kernel_module_loading_delete | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - low_complexity
  - no_reboot_needed
  - CCE-80711-5
  - PCI-DSS-Req-10.2.7
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_delete_module.files | map(attribute=''path'') | list | first }}'
  when:
  - find_delete_module.matched is defined and find_delete_module.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_complexity | bool
  - audit_rules_kernel_module_loading_delete | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - low_complexity
  - no_reboot_needed
  - CCE-80711-5
  - PCI-DSS-Req-10.2.7
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the delete_module rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S delete_module -k module-change
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_complexity | bool
  - audit_rules_kernel_module_loading_delete | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - low_complexity
  - no_reboot_needed
  - CCE-80711-5
  - PCI-DSS-Req-10.2.7
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the delete_module rule in rules.d on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S delete_module -k module-change
    state: present
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_complexity | bool
  - audit_rules_kernel_module_loading_delete | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - low_complexity
  - no_reboot_needed
  - CCE-80711-5
  - PCI-DSS-Req-10.2.7
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the delete_module rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b32 -S delete_module -k module-change
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_complexity | bool
  - audit_rules_kernel_module_loading_delete | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - low_complexity
  - no_reboot_needed
  - CCE-80711-5
  - PCI-DSS-Req-10.2.7
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the delete_module rule in audit.rules when on x86_64
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b64 -S delete_module -k module-change
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_complexity | bool
  - audit_rules_kernel_module_loading_delete | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - low_complexity
  - no_reboot_needed
  - CCE-80711-5
  - PCI-DSS-Req-10.2.7
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Set architecture for audit init_module tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - low_complexity
  - no_reboot_needed
  - CCE-80713-1
  - PCI-DSS-Req-10.2.7
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*init_module.*$
    patterns: '*.rules'
  register: find_init_module
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - low_complexity
  - no_reboot_needed
  - CCE-80713-1
  - PCI-DSS-Req-10.2.7
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_init_module.matched is defined and find_init_module.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - low_complexity
  - no_reboot_needed
  - CCE-80713-1
  - PCI-DSS-Req-10.2.7
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_init_module.files | map(attribute=''path'') | list | first }}'
  when:
  - find_init_module.matched is defined and find_init_module.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - low_complexity
  - no_reboot_needed
  - CCE-80713-1
  - PCI-DSS-Req-10.2.7
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the init_module rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S init_module -k module-change
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - low_complexity
  - no_reboot_needed
  - CCE-80713-1
  - PCI-DSS-Req-10.2.7
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the init_module rule in rules.d on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S init_module -k module-change
    state: present
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - low_complexity
  - no_reboot_needed
  - CCE-80713-1
  - PCI-DSS-Req-10.2.7
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the init_module rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b32 -S init_module -k module-change
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - low_complexity
  - no_reboot_needed
  - CCE-80713-1
  - PCI-DSS-Req-10.2.7
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the init_module rule in audit.rules when on x86_64
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b64 -S init_module -k module-change
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - low_complexity
  - no_reboot_needed
  - CCE-80713-1
  - PCI-DSS-Req-10.2.7
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Set architecture for audit lastlog tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_lastlog | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_lastlog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80719-8
  - PCI-DSS-Req-10.2.3
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k logins$
    patterns: '*.rules'
  register: find_lastlog
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_lastlog | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_lastlog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80719-8
  - PCI-DSS-Req-10.2.3
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules as the recipient for the
    rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/logins.rules
  when:
  - find_lastlog.matched is defined and find_lastlog.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_lastlog | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_lastlog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80719-8
  - PCI-DSS-Req-10.2.3
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_lastlog.files | map(attribute=''path'') | list | first }}'
  when:
  - find_lastlog.matched is defined and find_lastlog.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_lastlog | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_lastlog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80719-8
  - PCI-DSS-Req-10.2.3
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the lastlog rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /var/log/lastlog -p wa -k logins
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_lastlog | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_lastlog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80719-8
  - PCI-DSS-Req-10.2.3
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the lastlog rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /var/log/lastlog -p wa -k logins
    state: present
    dest: /etc/audit/audit.rules
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_lastlog | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_lastlog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80719-8
  - PCI-DSS-Req-10.2.3
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Set architecture for audit faillock tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_faillock | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_faillock
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80718-0
  - PCI-DSS-Req-10.2.3
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k logins$
    patterns: '*.rules'
  register: find_faillock
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_faillock | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_faillock
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80718-0
  - PCI-DSS-Req-10.2.3
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules as the recipient for the
    rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/logins.rules
  when:
  - find_faillock.matched is defined and find_faillock.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_faillock | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_faillock
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80718-0
  - PCI-DSS-Req-10.2.3
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_faillock.files | map(attribute=''path'') | list | first }}'
  when:
  - find_faillock.matched is defined and find_faillock.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_faillock | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_faillock
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80718-0
  - PCI-DSS-Req-10.2.3
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the faillock rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /var/run/faillock -p wa -k logins
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_faillock | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_faillock
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80718-0
  - PCI-DSS-Req-10.2.3
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the faillock rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /var/run/faillock -p wa -k logins
    state: present
    dest: /etc/audit/audit.rules
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_faillock | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_faillock
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80718-0
  - PCI-DSS-Req-10.2.3
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Set architecture for audit tallylog tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_login_events_tallylog | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_tallylog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80720-6
  - PCI-DSS-Req-10.2.3
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k logins$
    patterns: '*.rules'
  register: find_tallylog
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_login_events_tallylog | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_tallylog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80720-6
  - PCI-DSS-Req-10.2.3
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules as the recipient for the
    rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/logins.rules
  when:
  - find_tallylog.matched is defined and find_tallylog.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_login_events_tallylog | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_tallylog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80720-6
  - PCI-DSS-Req-10.2.3
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_tallylog.files | map(attribute=''path'') | list | first }}'
  when:
  - find_tallylog.matched is defined and find_tallylog.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_login_events_tallylog | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_tallylog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80720-6
  - PCI-DSS-Req-10.2.3
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the tallylog rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /var/log/tallylog -p wa -k logins
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_login_events_tallylog | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_tallylog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80720-6
  - PCI-DSS-Req-10.2.3
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the tallylog rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /var/log/tallylog -p wa -k logins
    state: present
    dest: /etc/audit/audit.rules
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_login_events_tallylog | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_tallylog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80720-6
  - PCI-DSS-Req-10.2.3
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/sudo.*$
    patterns: '*.rules'
  register: find_sudo
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudo | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudo
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80737-0
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_sudo.matched is defined and find_sudo.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudo | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudo
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80737-0
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_sudo.files | map(attribute=''path'') | list | first }}'
  when:
  - find_sudo.matched is defined and find_sudo.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudo | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudo
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80737-0
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the sudo rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/sudo -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudo | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudo
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80737-0
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the sudo rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/sudo -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudo | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudo
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80737-0
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/newgidmap.*$
    patterns: '*.rules'
  register: find_newgidmap
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_newgidmap | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgidmap
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80991-3
  - NIST-800-53-AU-12(c)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_newgidmap.matched is defined and find_newgidmap.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_newgidmap | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgidmap
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80991-3
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_newgidmap.files | map(attribute=''path'') | list | first }}'
  when:
  - find_newgidmap.matched is defined and find_newgidmap.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_newgidmap | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgidmap
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80991-3
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the newgidmap rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/newgidmap -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_newgidmap | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgidmap
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80991-3
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the newgidmap rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/newgidmap -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_newgidmap | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgidmap
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80991-3
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/gpasswd.*$
    patterns: '*.rules'
  register: find_gpasswd
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_gpasswd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_gpasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80728-9
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_gpasswd.matched is defined and find_gpasswd.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_gpasswd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_gpasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80728-9
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_gpasswd.files | map(attribute=''path'') | list | first }}'
  when:
  - find_gpasswd.matched is defined and find_gpasswd.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_gpasswd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_gpasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80728-9
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the gpasswd rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_gpasswd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_gpasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80728-9
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the gpasswd rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_gpasswd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_gpasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80728-9
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/at.*$
    patterns: '*.rules'
  register: find_at
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80988-9
  - NIST-800-53-AU-12(c)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_at.matched is defined and find_at.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80988-9
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_at.files | map(attribute=''path'') | list | first }}'
  when:
  - find_at.matched is defined and find_at.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80988-9
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the at rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/at -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80988-9
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the at rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/at -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80988-9
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/crontab.*$
    patterns: '*.rules'
  register: find_crontab
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_crontab | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_crontab
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80727-1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_crontab.matched is defined and find_crontab.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_crontab | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_crontab
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80727-1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_crontab.files | map(attribute=''path'') | list | first }}'
  when:
  - find_crontab.matched is defined and find_crontab.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_crontab | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_crontab
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80727-1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the crontab rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/crontab -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_crontab | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_crontab
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80727-1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the crontab rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/crontab -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_crontab | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_crontab
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80727-1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/umount.*$
    patterns: '*.rules'
  register: find_umount
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_umount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80739-6
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_umount.matched is defined and find_umount.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_umount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80739-6
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_umount.files | map(attribute=''path'') | list | first }}'
  when:
  - find_umount.matched is defined and find_umount.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_umount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80739-6
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the umount rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/umount -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_umount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80739-6
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the umount rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/umount -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_umount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80739-6
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/libexec/openssh/ssh-keysign.*$
    patterns: '*.rules'
  register: find_ssh_keysign
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_ssh_keysign | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_ssh_keysign
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80735-4
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_ssh_keysign.matched is defined and find_ssh_keysign.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_ssh_keysign | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_ssh_keysign
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80735-4
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_ssh_keysign.files | map(attribute=''path'') | list | first }}'
  when:
  - find_ssh_keysign.matched is defined and find_ssh_keysign.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_ssh_keysign | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_ssh_keysign
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80735-4
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the ssh_keysign rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/libexec/openssh/ssh-keysign -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_ssh_keysign | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_ssh_keysign
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80735-4
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the ssh_keysign rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/libexec/openssh/ssh-keysign -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_ssh_keysign | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_ssh_keysign
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80735-4
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/sudoedit.*$
    patterns: '*.rules'
  register: find_sudoedit
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudoedit | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudoedit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80738-8
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_sudoedit.matched is defined and find_sudoedit.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudoedit | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudoedit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80738-8
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_sudoedit.files | map(attribute=''path'') | list | first }}'
  when:
  - find_sudoedit.matched is defined and find_sudoedit.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudoedit | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudoedit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80738-8
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the sudoedit rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/sudoedit -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudoedit | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudoedit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80738-8
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the sudoedit rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/sudoedit -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudoedit | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudoedit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80738-8
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/mount.*$
    patterns: '*.rules'
  register: find_mount
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_mount | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_mount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80989-7
  - NIST-800-53-AU-12(c)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_mount.matched is defined and find_mount.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_mount | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_mount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80989-7
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_mount.files | map(attribute=''path'') | list | first }}'
  when:
  - find_mount.matched is defined and find_mount.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_mount | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_mount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80989-7
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the mount rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/mount -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_mount | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_mount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80989-7
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the mount rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/mount -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_mount | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_mount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80989-7
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/newuidmap.*$
    patterns: '*.rules'
  register: find_newuidmap
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_newuidmap | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newuidmap
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80992-1
  - NIST-800-53-AU-12(c)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_newuidmap.matched is defined and find_newuidmap.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_newuidmap | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newuidmap
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80992-1
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_newuidmap.files | map(attribute=''path'') | list | first }}'
  when:
  - find_newuidmap.matched is defined and find_newuidmap.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_newuidmap | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newuidmap
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80992-1
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the newuidmap rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/newuidmap -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_newuidmap | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newuidmap
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80992-1
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the newuidmap rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/newuidmap -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_newuidmap | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newuidmap
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80992-1
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/su.*$
    patterns: '*.rules'
  register: find_su
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_su | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_su
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80736-2
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_su.matched is defined and find_su.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_su | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_su
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80736-2
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_su.files | map(attribute=''path'') | list | first }}'
  when:
  - find_su.matched is defined and find_su.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_su | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_su
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80736-2
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the su rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/su -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_su | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_su
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80736-2
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the su rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/su -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_su | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_su
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80736-2
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/newgrp.*$
    patterns: '*.rules'
  register: find_newgrp
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_newgrp | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgrp
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80729-7
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_newgrp.matched is defined and find_newgrp.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_newgrp | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgrp
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80729-7
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_newgrp.files | map(attribute=''path'') | list | first }}'
  when:
  - find_newgrp.matched is defined and find_newgrp.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_newgrp | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgrp
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80729-7
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the newgrp rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_newgrp | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgrp
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80729-7
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the newgrp rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_newgrp | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgrp
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80729-7
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)

- name: Set architecture for audit renameat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_renameat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80974-9
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_renameat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_renameat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80974-9
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_renameat.matched is defined and find_renameat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_renameat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80974-9
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_renameat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_renameat.matched is defined and find_renameat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_renameat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80974-9
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the renameat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S renameat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S renameat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_renameat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80974-9
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the renameat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S renameat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S renameat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_renameat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80974-9
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the renameat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S renameat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S renameat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_renameat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80974-9
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the renameat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S renameat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S renameat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_renameat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80974-9
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Set architecture for audit fchownat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_fchownat | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80985-5
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchownat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_fchownat | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80985-5
  - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_fchownat.matched is defined and find_fchownat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_fchownat | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80985-5
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchownat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fchownat.matched is defined and find_fchownat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_fchownat | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80985-5
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchownat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S fchownat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S fchownat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_fchownat | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80985-5
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchownat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S fchownat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S fchownat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_fchownat | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80985-5
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchownat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S fchownat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S fchownat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_fchownat | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80985-5
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchownat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S fchownat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S fchownat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_fchownat | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80985-5
  - NIST-800-53-AU-12(c)

- name: Set architecture for audit lchown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80987-1
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lchown
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80987-1
  - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_lchown.matched is defined and find_lchown.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80987-1
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_lchown.files | map(attribute=''path'') | list | first }}'
  when:
  - find_lchown.matched is defined and find_lchown.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80987-1
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lchown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S lchown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S lchown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80987-1
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lchown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S lchown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S lchown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80987-1
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lchown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S lchown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S lchown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80987-1
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lchown rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S lchown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S lchown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80987-1
  - NIST-800-53-AU-12(c)

- name: Set architecture for audit chown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80984-8
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_chown
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80984-8
  - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_chown.matched is defined and find_chown.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80984-8
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_chown.files | map(attribute=''path'') | list | first }}'
  when:
  - find_chown.matched is defined and find_chown.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80984-8
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the chown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S chown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S chown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80984-8
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the chown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S chown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S chown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80984-8
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the chown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S chown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S chown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80984-8
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the chown rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S chown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S chown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80984-8
  - NIST-800-53-AU-12(c)

- name: Set architecture for audit fchown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80986-3
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchown
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80986-3
  - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_fchown.matched is defined and find_fchown.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80986-3
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchown.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fchown.matched is defined and find_fchown.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80986-3
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S fchown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S fchown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80986-3
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S fchown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S fchown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80986-3
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S fchown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S fchown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80986-3
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchown rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S fchown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S fchown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80986-3
  - NIST-800-53-AU-12(c)

- name: Set architecture for audit truncate tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_truncate
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_truncate.matched is defined and find_truncate.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_truncate.files | map(attribute=''path'') | list | first }}'
  when:
  - find_truncate.matched is defined and find_truncate.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the truncate rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the truncate rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the truncate rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the truncate rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Set architecture for audit creat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_creat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_creat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80751-1
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_creat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_creat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_creat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80751-1
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_creat.matched is defined and find_creat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_creat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_creat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80751-1
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_creat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_creat.matched is defined and find_creat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_creat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_creat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80751-1
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the creat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_creat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_creat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80751-1
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the creat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_creat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_creat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80751-1
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the creat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_creat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_creat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80751-1
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the creat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_creat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_creat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80751-1
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Set architecture for audit unlink tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80971-5
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_unlink
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80971-5
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_unlink.matched is defined and find_unlink.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80971-5
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_unlink.files | map(attribute=''path'') | list | first }}'
  when:
  - find_unlink.matched is defined and find_unlink.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80971-5
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the unlink rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S unlink -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S unlink -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80971-5
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the unlink rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S unlink -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S unlink -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80971-5
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the unlink rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S unlink -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S unlink -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80971-5
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the unlink rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S unlink -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S unlink -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80971-5
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Set architecture for audit open tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_open
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_open.matched is defined and find_open.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open.matched is defined and find_open.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the open rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the open rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the open rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Set architecture for audit open_by_handle_at tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_open_by_handle_at
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Set architecture for audit ftruncate tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_ftruncate
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_ftruncate.matched is defined and find_ftruncate.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_ftruncate.files | map(attribute=''path'') | list | first }}'
  when:
  - find_ftruncate.matched is defined and find_ftruncate.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the ftruncate rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the ftruncate rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the ftruncate rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the ftruncate rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Set architecture for audit unlinkat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80972-3
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_unlinkat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80972-3
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_unlinkat.matched is defined and find_unlinkat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80972-3
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_unlinkat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_unlinkat.matched is defined and find_unlinkat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80972-3
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the unlinkat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S unlinkat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S unlinkat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80972-3
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the unlinkat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S unlinkat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S unlinkat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80972-3
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the unlinkat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S unlinkat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S unlinkat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80972-3
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the unlinkat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S unlinkat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S unlinkat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80972-3
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Set architecture for audit openat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_openat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_openat.matched is defined and find_openat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_openat.matched is defined and find_openat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the openat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the openat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the openat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Set architecture for audit rename tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_rename | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80973-1
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_rename
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_rename | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80973-1
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_rename.matched is defined and find_rename.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_rename | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80973-1
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_rename.files | map(attribute=''path'') | list | first }}'
  when:
  - find_rename.matched is defined and find_rename.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_rename | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80973-1
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the rename rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S rename -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S rename -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_rename | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80973-1
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the rename rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S rename -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S rename -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_rename | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80973-1
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the rename rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S rename -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S rename -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_rename | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80973-1
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Inserts/replaces the rename rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S rename -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S rename -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_rename | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80973-1
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5

- name: Set architecture for audit openat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_gshadow_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80961-6

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*openat(,[\S]+)?[\s]+-F[\s]+a2&03[\s]+-F[\s]+path=/etc/gshadow.*
    patterns: '*.rules'
  register: find_openat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_gshadow_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80961-6

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/modify.rules
  when:
  - find_openat.matched is defined and find_openat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_gshadow_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80961-6

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_openat.matched is defined and find_openat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_gshadow_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80961-6

- name: Inserts/replaces the openat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_gshadow_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80961-6

- name: Inserts/replaces the openat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_gshadow_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80961-6

- name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    regexp: -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_gshadow_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80961-6

- name: Inserts/replaces the openat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_gshadow_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80961-6

- name: Set architecture for audit open_by_handle_at tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_passwd_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80932-7

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*open_by_handle_at(,[\S]+)?[\s]+-F[\s]+a2&03[\s]+-F[\s]+path=/etc/passwd.*
    patterns: '*.rules'
  register: find_open_by_handle_at
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_passwd_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80932-7

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/modify.rules
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_passwd_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80932-7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_passwd_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80932-7

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_passwd_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80932-7

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_passwd_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80932-7

- name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_passwd_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80932-7

- name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_passwd_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80932-7

- name: Set architecture for audit open_by_handle_at tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_open_by_handle_at | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80929-3

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*open_by_handle_at(,[\S]+)?[\s]+-F[\s]+a2&03[\s]+-F[\s]+path=/etc/group.*
    patterns: '*.rules'
  register: find_open_by_handle_at
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_open_by_handle_at | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80929-3

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/modify.rules
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_open_by_handle_at | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80929-3

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_open_by_handle_at | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80929-3

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_open_by_handle_at | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80929-3

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_open_by_handle_at | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80929-3

- name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_open_by_handle_at | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80929-3

- name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_open_by_handle_at | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80929-3

- name: Set architecture for audit open_by_handle_at tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_gshadow_open_by_handle_at | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80960-8

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*open_by_handle_at(,[\S]+)?[\s]+-F[\s]+a2&03[\s]+-F[\s]+path=/etc/gshadow.*
    patterns: '*.rules'
  register: find_open_by_handle_at
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_gshadow_open_by_handle_at | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80960-8

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/modify.rules
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_gshadow_open_by_handle_at | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80960-8

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_gshadow_open_by_handle_at | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80960-8

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F
      key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_gshadow_open_by_handle_at | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80960-8

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F
      key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_gshadow_open_by_handle_at | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80960-8

- name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F
      key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_gshadow_open_by_handle_at | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80960-8

- name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F
      key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_gshadow_open_by_handle_at | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80960-8

- name: Set architecture for audit open tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80930-1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*open(,[\S]+)?[\s]+-F[\s]+a1&03[\s]+-F[\s]+path=/etc/passwd.*
    patterns: '*.rules'
  register: find_open
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80930-1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/modify.rules
  when:
  - find_open.matched is defined and find_open.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80930-1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open.matched is defined and find_open.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80930-1

- name: Inserts/replaces the open rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80930-1

- name: Inserts/replaces the open rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80930-1

- name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    regexp: -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80930-1

- name: Inserts/replaces the open rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80930-1

- name: Set architecture for audit open_by_handle_at tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open_by_handle_at | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80957-4

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*open_by_handle_at(,[\S]+)?[\s]+-F[\s]+a2&03[\s]+-F[\s]+path=/etc/shadow.*
    patterns: '*.rules'
  register: find_open_by_handle_at
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open_by_handle_at | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80957-4

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/modify.rules
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open_by_handle_at | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80957-4

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open_by_handle_at | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80957-4

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open_by_handle_at | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80957-4

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open_by_handle_at | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80957-4

- name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open_by_handle_at | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80957-4

- name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open_by_handle_at | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80957-4

- name: Set architecture for audit openat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80928-5

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*openat(,[\S]+)?[\s]+-F[\s]+a2&03[\s]+-F[\s]+path=/etc/group.*
    patterns: '*.rules'
  register: find_openat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80928-5

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/modify.rules
  when:
  - find_openat.matched is defined and find_openat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80928-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_openat.matched is defined and find_openat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80928-5

- name: Inserts/replaces the openat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80928-5

- name: Inserts/replaces the openat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80928-5

- name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    regexp: -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80928-5

- name: Inserts/replaces the openat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80928-5

- name: Set architecture for audit open tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_open | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80927-7

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*open(,[\S]+)?[\s]+-F[\s]+a1&03[\s]+-F[\s]+path=/etc/group.*
    patterns: '*.rules'
  register: find_open
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_open | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80927-7

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/modify.rules
  when:
  - find_open.matched is defined and find_open.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_open | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80927-7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open.matched is defined and find_open.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_open | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80927-7

- name: Inserts/replaces the open rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_open | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80927-7

- name: Inserts/replaces the open rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_open | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80927-7

- name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    regexp: -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_open | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80927-7

- name: Inserts/replaces the open rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/group -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_group_open | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_group_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80927-7

- name: Set architecture for audit shadow tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80762-8
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_shadow
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80762-8
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_shadow.matched is defined and find_shadow.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80762-8
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_shadow.files | map(attribute=''path'') | list | first }}'
  when:
  - find_shadow.matched is defined and find_shadow.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80762-8
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Inserts/replaces the shadow rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/shadow -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80762-8
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Inserts/replaces the shadow rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/shadow -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80762-8
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Set architecture for audit openat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80931-9

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*openat(,[\S]+)?[\s]+-F[\s]+a2&03[\s]+-F[\s]+path=/etc/passwd.*
    patterns: '*.rules'
  register: find_openat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80931-9

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/modify.rules
  when:
  - find_openat.matched is defined and find_openat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80931-9

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_openat.matched is defined and find_openat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80931-9

- name: Inserts/replaces the openat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80931-9

- name: Inserts/replaces the openat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80931-9

- name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    regexp: -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80931-9

- name: Inserts/replaces the openat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80931-9

- name: Set architecture for audit open tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80956-6

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*open(,[\S]+)?[\s]+-F[\s]+a1&03[\s]+-F[\s]+path=/etc/shadow.*
    patterns: '*.rules'
  register: find_open
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80956-6

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/modify.rules
  when:
  - find_open.matched is defined and find_open.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80956-6

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open.matched is defined and find_open.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80956-6

- name: Inserts/replaces the open rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80956-6

- name: Inserts/replaces the open rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80956-6

- name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    regexp: -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80956-6

- name: Inserts/replaces the open rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80956-6

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*dir=/var/log/audit/.*$
    patterns: '*.rules'
  register: find_var_log_audit
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - directory_access_var_log_audit | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - directory_access_var_log_audit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80941-8

- name: Use /etc/audit/rules.d/access-audit-trail.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access-audit-trail.rules
  when:
  - find_var_log_audit.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - directory_access_var_log_audit | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - directory_access_var_log_audit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80941-8

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_var_log_audit.files | map(attribute=''path'') | list | first }}'
  when:
  - find_var_log_audit.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - directory_access_var_log_audit | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - directory_access_var_log_audit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80941-8

- name: Inserts/replaces the /var/log/audit/ rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F dir=/var/log/audit/ -F perm=r -F auid>=1000 -F auid!=unset -F key=access-audit-trail
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - directory_access_var_log_audit | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - directory_access_var_log_audit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80941-8

- name: Inserts/replaces the /var/log/audit/ rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F dir=/var/log/audit/ -F perm=r -F auid>=1000 -F auid!=unset -F key=access-audit-trail
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - directory_access_var_log_audit | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - directory_access_var_log_audit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80941-8

- name: Set architecture for audit opasswd tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80760-2
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_opasswd
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80760-2
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_opasswd.matched is defined and find_opasswd.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80760-2
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_opasswd.files | map(attribute=''path'') | list | first }}'
  when:
  - find_opasswd.matched is defined and find_opasswd.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80760-2
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Inserts/replaces the opasswd rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80760-2
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Inserts/replaces the opasswd rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80760-2
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Set architecture for audit gshadow tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80759-4
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_gshadow
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80759-4
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_gshadow.matched is defined and find_gshadow.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80759-4
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_gshadow.files | map(attribute=''path'') | list | first }}'
  when:
  - find_gshadow.matched is defined and find_gshadow.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80759-4
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Inserts/replaces the gshadow rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/gshadow -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80759-4
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Inserts/replaces the gshadow rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/gshadow -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80759-4
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Set architecture for audit open tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_gshadow_open | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80959-0

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*open(,[\S]+)?[\s]+-F[\s]+a1&03[\s]+-F[\s]+path=/etc/gshadow.*
    patterns: '*.rules'
  register: find_open
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_gshadow_open | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80959-0

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/modify.rules
  when:
  - find_open.matched is defined and find_open.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_gshadow_open | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80959-0

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open.matched is defined and find_open.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_gshadow_open | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80959-0

- name: Inserts/replaces the open rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_gshadow_open | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80959-0

- name: Inserts/replaces the open rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_gshadow_open | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80959-0

- name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    regexp: -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_gshadow_open | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80959-0

- name: Inserts/replaces the open rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/gshadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_gshadow_open | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_gshadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80959-0

- name: Set architecture for audit openat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_shadow_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80958-2

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*openat(,[\S]+)?[\s]+-F[\s]+a2&03[\s]+-F[\s]+path=/etc/shadow.*
    patterns: '*.rules'
  register: find_openat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_shadow_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80958-2

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/modify.rules
  when:
  - find_openat.matched is defined and find_openat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_shadow_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80958-2

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_openat.matched is defined and find_openat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_shadow_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80958-2

- name: Inserts/replaces the openat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_shadow_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80958-2

- name: Inserts/replaces the openat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_shadow_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80958-2

- name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    regexp: -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_shadow_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80958-2

- name: Inserts/replaces the openat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_shadow_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80958-2

- name: Set architecture for audit passwd tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80761-0
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_passwd
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80761-0
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_passwd.matched is defined and find_passwd.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80761-0
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_passwd.files | map(attribute=''path'') | list | first }}'
  when:
  - find_passwd.matched is defined and find_passwd.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80761-0
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Inserts/replaces the passwd rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/passwd -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80761-0
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Inserts/replaces the passwd rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/passwd -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80761-0
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Set architecture for audit group tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80758-6
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_group
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80758-6
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_group.matched is defined and find_group.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80758-6
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_group.files | map(attribute=''path'') | list | first }}'
  when:
  - find_group.matched is defined and find_group.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80758-6
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Inserts/replaces the group rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/group -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80758-6
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Inserts/replaces the group rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/group -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80758-6
  - PCI-DSS-Req-10.2.5
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Enable service auditd
  service:
    name: auditd
    enabled: 'yes'
    state: started
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - high_severity | bool
  - enable_strategy | bool
  - service_auditd_enabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_auditd_enabled
  - high_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80872-5
  - PCI-DSS-Req-10.1
  - NIST-800-171-3.3.1
  - NIST-800-171-3.3.2
  - NIST-800-171-3.3.6
  - NIST-800-53-AC-2(g)
  - NIST-800-53-AU-3
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-10
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-IR-5
  - CJIS-5.4.1.1

- name: Ensure sysctl kernel.kptr_restrict is set to 1
  sysctl:
    name: kernel.kptr_restrict
    value: 1
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_kernel_kptr_restrict | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_kernel_kptr_restrict
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80915-2
  - NIST-800-53-SC-39

- name: Ensure sysctl kernel.kexec_load_disabled is set to 1
  sysctl:
    name: kernel.kexec_load_disabled
    value: 1
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - sysctl_kernel_kexec_load_disabled | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_kernel_kexec_load_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80952-5

- name: Ensure sysctl kernel.yama.ptrace_scope is set to 1
  sysctl:
    name: kernel.yama.ptrace_scope
    value: 1
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_kernel_yama_ptrace_scope | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_kernel_yama_ptrace_scope
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80953-3

- name: Ensure sysctl kernel.dmesg_restrict is set to 1
  sysctl:
    name: kernel.dmesg_restrict
    value: 1
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_kernel_dmesg_restrict | bool
  - low_complexity | bool
  tags:
  - sysctl_kernel_dmesg_restrict
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80913-7
  - NIST-800-171-3.1.5
  - NIST-800-53-SI-11

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/dev/shm'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_noexec | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_noexec
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80838-6
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_noexec | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_noexec
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80838-6
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure permission noexec are set on /dev/shm
  mount:
    path: /dev/shm
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},noexec'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_noexec | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_noexec
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80838-6
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/dev/shm'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nosuid
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80839-4
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nosuid
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80839-4
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure permission nosuid are set on /dev/shm
  mount:
    path: /dev/shm
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nosuid'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nosuid
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80839-4
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/dev/shm'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_dev_shm_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80837-8
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_dev_shm_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80837-8
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure permission nodev are set on /dev/shm
  mount:
    path: /dev/shm
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nodev'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_dev_shm_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80837-8
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2
