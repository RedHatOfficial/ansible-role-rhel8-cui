- name: Ensure sendmail is removed
  package:
    name: sendmail
    state: absent
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - package_sendmail_removed | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - package_sendmail_removed
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-81039-0
  - NIST-800-53-CM-7

- name: Enable service usbguard
  service:
    name: usbguard
    enabled: 'yes'
    state: started
  tags:
  - service_usbguard_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82853-3
  when:
  - service_usbguard_enabled | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure abrt is removed
  package:
    name: abrt
    state: absent
  tags:
  - package_abrt_removed
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80948-3
  when:
  - disable_strategy | bool
  - package_abrt_removed | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Disable Kerberos Authentication
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*KerberosAuthentication\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: KerberosAuthentication no
      state: present
      insertbefore: ^Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_disable_kerb_auth | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_kerb_auth
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80898-0
  - NIST-800-53-CM-6(c)
  - NIST-800-171-3.1.12

- name: Disable SSH Root Login
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*PermitRootLogin\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: PermitRootLogin no
      state: present
      insertbefore: ^Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_disable_root_login | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_root_login
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80901-2
  - NIST-800-53-AC-3
  - NIST-800-53-AC-6(2)
  - NIST-800-53-AC-17(b)
  - NIST-800-53-IA-2
  - NIST-800-53-IA-2(5)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - CJIS-5.5.6

- name: Disable Host-Based Authentication
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*HostbasedAuthentication\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: HostbasedAuthentication no
      state: present
      insertbefore: ^Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - disable_host_auth | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - disable_host_auth
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80786-7
  - NIST-800-53-AC-3
  - NIST-800-53-AC-17
  - NIST-800-53-CM-6(b)
  - NIST-800-171-3.1.12
  - CJIS-5.5.6

- name: Set SSH Idle Timeout Interval
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*ClientAliveInterval\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: ClientAliveInterval {{ sshd_idle_timeout_value }}
      state: present
      insertbefore: ^Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sshd_set_idle_timeout | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_set_idle_timeout
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80906-1
  - NIST-800-53-AC-2(5)
  - NIST-800-53-SA-8(i)
  - NIST-800-53-AC-12
  - NIST-800-53-AC-17(b)
  - NIST-800-171-3.1.11
  - PCI-DSS-Req-8.1.8
  - CJIS-5.5.6

- name: Enable Use of Strict Mode Checking
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*StrictModes\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: StrictModes yes
      state: present
      insertbefore: ^Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sshd_enable_strictmodes | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_enable_strictmodes
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80904-6
  - NIST-800-53-AC-6
  - NIST-800-53-AC-17(b)
  - NIST-800-171-3.1.12

- name: Disable GSSAPI Authentication
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*GSSAPIAuthentication\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: GSSAPIAuthentication no
      state: present
      insertbefore: ^Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_disable_gssapi_auth | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_gssapi_auth
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80897-2
  - NIST-800-53-AC-17(b)
  - NIST-800-53-CM-6(c)
  - NIST-800-171-3.1.12

- name: Disable SSH Access via Empty Passwords
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*PermitEmptyPasswords\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: PermitEmptyPasswords no
      state: present
      insertbefore: ^Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_disable_empty_passwords | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_empty_passwords
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80896-4
  - NIST-800-53-AC-3
  - NIST-800-53-AC-6
  - NIST-800-53-AC-17(b)
  - NIST-800-53-CM-6(b)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - CJIS-5.5.6

- name: Set SSH Client Alive Max Count
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*ClientAliveCountMax\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: ClientAliveCountMax {{ var_sshd_set_keepalive }}
      state: present
      insertbefore: ^Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_set_keepalive | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_set_keepalive
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80907-9
  - NIST-800-53-AC-2(5)
  - NIST-800-53-SA-8
  - NIST-800-53-AC-12
  - NIST-800-53-AC-17(b)
  - NIST-800-171-3.1.11
  - CJIS-5.5.6

- name: Disable SSH Support for User Known Hosts
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*IgnoreUserKnownHosts\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: IgnoreUserKnownHosts yes
      state: present
      insertbefore: ^Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sshd_disable_user_known_hosts | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_user_known_hosts
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80902-0
  - NIST-800-53-AC-17(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.12

- name: Enable SSH Warning Banner
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*Banner\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: Banner /etc/issue
      state: present
      insertbefore: ^Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sshd_enable_warning_banner | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_enable_warning_banner
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80905-3
  - NIST-800-53-AC-8(a)
  - NIST-800-53-AC-8(b)
  - NIST-800-53-AC-8(c)(1)
  - NIST-800-53-AC-8(c)(2)
  - NIST-800-53-AC-8(c)(3)
  - NIST-800-53-AC-17(b)
  - NIST-800-171-3.1.9
  - CJIS-5.5.6

- name: Disable SSH Support for .rhosts Files
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*IgnoreRhosts\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: IgnoreRhosts yes
      state: present
      insertbefore: ^Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sshd_disable_rhosts | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_rhosts
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80899-8
  - NIST-800-53-AC-3
  - NIST-800-53-AC-17(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.12
  - CJIS-5.5.6

- name: Enable service fapolicyd
  service:
    name: fapolicyd
    enabled: 'yes'
    state: started
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_fapolicyd_enabled | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_fapolicyd_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82249-4

- name: Configure dnf-automatic to Install Only Security Updates
  ini_file:
    dest: /etc/dnf/automatic.conf
    section: commands
    option: upgrade_type
    value: security
    create: true
  tags:
  - dnf-automatic_security_updates_only
  - low_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-82267-6
  - NIST-800-53-SI-2(5)
  when:
  - no_reboot_needed | bool
  - medium_disruption | bool
  - low_severity | bool
  - unknown_strategy | bool
  - low_complexity | bool

- name: Check existence of yum on Fedora
  stat:
    path: /etc/yum.conf
  register: yum_config_file
  check_mode: false
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - ensure_gpgcheck_local_packages | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_local_packages
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80791-7
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11
  - NIST-800-171-3.4.8

- name: Ensure GPG check Enabled for Local Packages (Yum)
  ini_file:
    dest: /etc/yum.conf
    section: main
    option: localpkg_gpgcheck
    value: 1
    create: true
  when:
  - (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or yum_config_file.stat.exists)
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - ensure_gpgcheck_local_packages | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_local_packages
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80791-7
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11
  - NIST-800-171-3.4.8

- name: Ensure GPG check Enabled for Local Packages (DNF)
  ini_file:
    dest: /etc/dnf/dnf.conf
    section: main
    option: localpkg_gpgcheck
    value: 1
    create: true
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - ensure_gpgcheck_local_packages | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_local_packages
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80791-7
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11
  - NIST-800-171-3.4.8

- name: Check existence of yum on Fedora
  stat:
    path: /etc/yum.conf
  register: yum_config_file
  check_mode: false
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - ensure_gpgcheck_globally_activated | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_globally_activated
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80790-9
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1

- name: Ensure GPG check is globally activated (yum)
  ini_file:
    dest: /etc/yum.conf
    section: main
    option: gpgcheck
    value: 1
    create: false
  when:
  - (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or yum_config_file.stat.exists)
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - ensure_gpgcheck_globally_activated | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_globally_activated
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80790-9
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1

- name: Ensure GPG check is globally activated (dnf)
  ini_file:
    dest: /etc/dnf/dnf.conf
    section: main
    option: gpgcheck
    value: 1
    create: false
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - ensure_gpgcheck_globally_activated | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_globally_activated
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80790-9
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1

- name: Read permission of GPG key directory
  stat:
    path: /etc/pki/rpm-gpg/
  register: gpg_key_directory_permission
  check_mode: false
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80795-8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Read signatures in GPG key
  shell: 'set -o pipefail

    gpg --show-key --with-colons "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release" | grep "^fpr" | cut -d ":" -f 10

    '
  args:
    warn: false
    executable: /bin/bash
  changed_when: false
  register: gpg_fingerprints
  check_mode: false
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80795-8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Set Fact - Valid fingerprints
  set_fact:
    gpg_valid_fingerprints: ("567E347AD0044ADE55BA8A5F199E2F91FD431D51" "43A6E49C4A38F4BE9ABF2A5345689C882FA658E0")
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80795-8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Import RedHat GPG key
  rpm_key:
    state: present
    key: /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
  when:
  - gpg_key_directory_permission.stat.mode <= '0755'
  - ( gpg_fingerprints.stdout_lines | difference(gpg_valid_fingerprints)) | length == 0
  - gpg_fingerprints.stdout_lines | length > 0
  - ansible_distribution == "RedHat"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80795-8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1

- name: Find All yum Repositories
  find:
    paths: /etc/yum.repos.d/
    patterns: '*.repo'
    contains: ^\[.+]$
  register: yum_find
  tags:
  - ensure_gpgcheck_never_disabled
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80792-5
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - ensure_gpgcheck_never_disabled | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Ensure gpgcheck Enabled For All yum Package Repositories
  with_items: '{{ yum_find.files }}'
  lineinfile:
    create: true
    dest: '{{ item.path }}'
    regexp: ^gpgcheck
    line: gpgcheck=1
  tags:
  - ensure_gpgcheck_never_disabled
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80792-5
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - ensure_gpgcheck_never_disabled | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Configure dnf-automatic to Install Available Updates Automatically
  ini_file:
    dest: /etc/dnf/automatic.conf
    section: commands
    option: apply_updates
    value: 'yes'
    create: true
  tags:
  - dnf-automatic_apply_updates
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-82494-6
  - NIST-800-53-SI-2(5)
  when:
  - no_reboot_needed | bool
  - medium_severity | bool
  - medium_disruption | bool
  - unknown_strategy | bool
  - low_complexity | bool

- name: Ensure usbguard is installed
  package:
    name: usbguard
    state: present
  tags:
  - package_usbguard_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82959-8
  when:
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - package_usbguard_installed | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure fapolicyd is installed
  package:
    name: fapolicyd
    state: present
  tags:
  - package_fapolicyd_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82191-8
  when:
  - no_reboot_needed | bool
  - medium_severity | bool
  - package_fapolicyd_installed | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure audispd-plugins is installed
  package:
    name: audispd-plugins
    state: present
  tags:
  - package_audispd-plugins_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82953-1
  when:
  - enable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure libcap-ng-utils is installed
  package:
    name: libcap-ng-utils
    state: present
  tags:
  - package_libcap-ng-utils_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82979-6
  when:
  - enable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure abrt-addon-kerneloops is removed
  package:
    name: abrt-addon-kerneloops
    state: absent
  tags:
  - package_abrt-addon-kerneloops_removed
  - low_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82926-7
  when:
  - disable_strategy | bool
  - low_disruption | bool
  - low_severity | bool
  - no_reboot_needed | bool
  - low_complexity | bool

- name: Ensure abrt-plugin-sosreport is removed
  package:
    name: abrt-plugin-sosreport
    state: absent
  tags:
  - package_abrt-plugin-sosreport_removed
  - low_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82910-1
  when:
  - disable_strategy | bool
  - low_disruption | bool
  - low_severity | bool
  - no_reboot_needed | bool
  - low_complexity | bool

- name: Ensure abrt-cli is removed
  package:
    name: abrt-cli
    state: absent
  tags:
  - package_abrt-cli_removed
  - low_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82907-7
  when:
  - disable_strategy | bool
  - low_disruption | bool
  - low_severity | bool
  - no_reboot_needed | bool
  - low_complexity | bool

- name: Ensure nfs-utils is removed
  package:
    name: nfs-utils
    state: absent
  tags:
  - package_nfs-utils_removed
  - low_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82932-5
  when:
  - disable_strategy | bool
  - low_disruption | bool
  - low_severity | bool
  - no_reboot_needed | bool
  - low_complexity | bool

- name: Ensure openscap-scanner is installed
  package:
    name: openscap-scanner
    state: present
  tags:
  - package_openscap-scanner_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82220-5
  when:
  - enable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure policycoreutils is installed
  package:
    name: policycoreutils
    state: present
  tags:
  - package_policycoreutils_installed
  - high_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82976-2
  when:
  - no_reboot_needed | bool
  - high_severity | bool
  - enable_strategy | bool
  - package_policycoreutils_installed | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure abrt-addon-ccpp is removed
  package:
    name: abrt-addon-ccpp
    state: absent
  tags:
  - package_abrt-addon-ccpp_removed
  - low_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82919-2
  when:
  - disable_strategy | bool
  - low_disruption | bool
  - low_severity | bool
  - no_reboot_needed | bool
  - low_complexity | bool

- name: Ensure iptables is installed
  package:
    name: iptables
    state: present
  tags:
  - package_iptables_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82982-0
  when:
  - no_reboot_needed | bool
  - package_iptables_installed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure abrt-plugin-rhtsupport is removed
  package:
    name: abrt-plugin-rhtsupport
    state: absent
  tags:
  - package_abrt-plugin-rhtsupport_removed
  - low_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82916-8
  when:
  - disable_strategy | bool
  - low_disruption | bool
  - low_severity | bool
  - no_reboot_needed | bool
  - low_complexity | bool

- name: Ensure python-rhsm is installed
  package:
    name: python-rhsm
    state: present
  tags:
  - package_python-rhsm_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82973-9
  when:
  - enable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure scap-security-guide is installed
  package:
    name: scap-security-guide
    state: present
  tags:
  - package_scap-security-guide_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82949-9
  when:
  - enable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure krb5-workstation is removed
  package:
    name: krb5-workstation
    state: absent
  tags:
  - package_krb5-workstation_removed
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82931-7
  when:
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure gssproxy is removed
  package:
    name: gssproxy
    state: absent
  tags:
  - package_gssproxy_removed
  - low_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82943-2
  when:
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_severity | bool
  - package_gssproxy_removed | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure dnf-automatic is installed
  package:
    name: dnf-automatic
    state: present
  tags:
  - package_dnf-automatic_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82985-3
  when:
  - enable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure sudo is installed
  package:
    name: sudo
    state: present
  tags:
  - package_sudo_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82214-8
  when:
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - package_sudo_installed | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure abrt-addon-python is removed
  package:
    name: abrt-addon-python
    state: absent
  tags:
  - package_abrt-addon-python_removed
  - low_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82923-4
  when:
  - disable_strategy | bool
  - low_disruption | bool
  - low_severity | bool
  - no_reboot_needed | bool
  - low_complexity | bool

- name: Ensure sssd-ipa is installed
  package:
    name: sssd-ipa
    state: present
  tags:
  - package_sssd-ipa_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82994-5
  when:
  - enable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure rng-tools is installed
  package:
    name: rng-tools
    state: present
  tags:
  - package_rng-tools_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82968-9
  when:
  - enable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure iprutils is removed
  package:
    name: iprutils
    state: absent
  tags:
  - package_iprutils_removed
  - low_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82946-5
  when:
  - package_iprutils_removed | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure abrt-plugin-logger is removed
  package:
    name: abrt-plugin-logger
    state: absent
  tags:
  - package_abrt-plugin-logger_removed
  - low_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82913-5
  when:
  - disable_strategy | bool
  - low_disruption | bool
  - low_severity | bool
  - no_reboot_needed | bool
  - low_complexity | bool

- name: enable fips mode
  command: /usr/bin/fips-mode-setup --enable
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - medium_complexity | bool
  - medium_disruption | bool
  - enable_fips_mode | bool
  tags:
  - enable_fips_mode
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - reboot_required
  - CCE-80942-6
  - NIST-800-53-SC-13
  - NIST-800-53-AC-17(2)
  - NIST-800-53-IA-7

- name: Ensure aide is installed
  package:
    name: aide
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - package_aide_installed | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - package_aide_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80844-4
  - NIST-800-53-CM-3(d)
  - NIST-800-53-CM-3(e)
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(3)
  - NIST-800-53-SC-28
  - NIST-800-53-SI-7
  - PCI-DSS-Req-11.5
  - CJIS-5.10.1.3

- name: Ensure SELinux State is Enforcing
  lineinfile:
    path: /etc/sysconfig/selinux
    regexp: ^SELINUX=
    line: SELINUX={{ var_selinux_state }}
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - low_disruption | bool
  - selinux_state | bool
  - low_complexity | bool
  tags:
  - selinux_state
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80869-1
  - NIST-800-53-AC-3
  - NIST-800-53-AC-3(3)
  - NIST-800-53-AC-3(4)
  - NIST-800-53-AC-4
  - NIST-800-53-AC-6
  - NIST-800-53-AU-9
  - NIST-800-53-SI-6(a)
  - NIST-800-171-3.1.2
  - NIST-800-171-3.7.2

- name: Configure SELinux Policy
  lineinfile:
    path: /etc/sysconfig/selinux
    regexp: ^SELINUXTYPE=
    line: SELINUXTYPE={{ var_selinux_policy_name }}
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - selinux_policytype | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - selinux_policytype
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80868-3
  - NIST-800-53-AC-3
  - NIST-800-53-AC-3(3)
  - NIST-800-53-AC-3(4)
  - NIST-800-53-AC-4
  - NIST-800-53-AC-6
  - NIST-800-53-AU-9
  - NIST-800-53-SI-6(a)
  - NIST-800-171-3.1.2
  - NIST-800-171-3.7.2

- name: Ensure kernel module 'cramfs' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/cramfs.conf
    regexp: cramfs
    line: install cramfs /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - low_severity | bool
  - medium_disruption | bool
  - kernel_module_cramfs_disabled | bool
  - low_complexity | bool
  tags:
  - kernel_module_cramfs_disabled
  - low_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-81031-7
  - NIST-800-53-CM-7
  - NIST-800-171-3.4.6

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/home'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_home_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_home_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81048-1

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_home_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_home_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81048-1

- name: Ensure permission nodev are set on /home
  mount:
    path: /home
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nodev'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_home_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_home_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81048-1

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/var/tmp'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - mount_option_var_tmp_nodev | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82068-8

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - mount_option_var_tmp_nodev | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82068-8

- name: Ensure permission nodev are set on /var/tmp
  mount:
    path: /var/tmp
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nodev'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - mount_option_var_tmp_nodev | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82068-8

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/var/log'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_var_log_noexec | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_log_noexec
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82008-4
  - NIST-800-53-CM-7

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_var_log_noexec | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_log_noexec
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82008-4
  - NIST-800-53-CM-7

- name: Ensure permission noexec are set on /var/log
  mount:
    path: /var/log
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},noexec'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_var_log_noexec | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_log_noexec
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82008-4
  - NIST-800-53-CM-7

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/var/log/audit'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_var_log_audit_noexec | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_log_audit_noexec
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82975-4
  - NIST-800-53-CM-7

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_var_log_audit_noexec | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_log_audit_noexec
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82975-4
  - NIST-800-53-CM-7

- name: Ensure permission noexec are set on /var/log/audit
  mount:
    path: /var/log/audit
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},noexec'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_var_log_audit_noexec | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_log_audit_noexec
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82975-4
  - NIST-800-53-CM-7

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/var/tmp'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - mount_option_var_tmp_nosuid | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82154-6

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - mount_option_var_tmp_nosuid | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82154-6

- name: Ensure permission nosuid are set on /var/tmp
  mount:
    path: /var/tmp
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nosuid'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - mount_option_var_tmp_nosuid | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82154-6

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/var/log/audit'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_var_log_audit_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_log_audit_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82080-3
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_var_log_audit_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_log_audit_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82080-3
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure permission nodev are set on /var/log/audit
  mount:
    path: /var/log/audit
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nodev'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_var_log_audit_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_log_audit_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82080-3
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/var/log'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_var_log_nodev | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_log_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82077-9
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_var_log_nodev | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_log_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82077-9
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure permission nodev are set on /var/log
  mount:
    path: /var/log
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nodev'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_var_log_nodev | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_log_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82077-9
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/tmp'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_nodev | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_tmp_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82623-0
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_nodev | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_tmp_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82623-0
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure permission nodev are set on /tmp
  mount:
    path: /tmp
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nodev'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_nodev | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_tmp_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82623-0
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/dev/shm'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nosuid
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80839-4
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nosuid
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80839-4
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure permission nosuid are set on /dev/shm
  mount:
    path: /dev/shm
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nosuid'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nosuid
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80839-4
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/var/tmp'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_var_tmp_noexec | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_noexec
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82151-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_var_tmp_noexec | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_noexec
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82151-2

- name: Ensure permission noexec are set on /var/tmp
  mount:
    path: /var/tmp
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},noexec'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_var_tmp_noexec | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_noexec
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82151-2

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/boot'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_boot_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_boot_nosuid
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81033-3
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_boot_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_boot_nosuid
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81033-3
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure permission nosuid are set on /boot
  mount:
    path: /boot
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nosuid'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_boot_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_boot_nosuid
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81033-3
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/boot'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_boot_nodev | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_boot_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82941-6
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_boot_nodev | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_boot_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82941-6
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure permission nodev are set on /boot
  mount:
    path: /boot
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nodev'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_boot_nodev | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_boot_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82941-6
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/var/log'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_var_log_nosuid | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_log_nosuid
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82065-4
  - NIST-800-53-CM-7

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_var_log_nosuid | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_log_nosuid
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82065-4
  - NIST-800-53-CM-7

- name: Ensure permission nosuid are set on /var/log
  mount:
    path: /var/log
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nosuid'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_var_log_nosuid | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_log_nosuid
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82065-4
  - NIST-800-53-CM-7

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/var'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_var_nodev | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82062-1
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_var_nodev | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82062-1
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure permission nodev are set on /var
  mount:
    path: /var
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nodev'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_var_nodev | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82062-1
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/var/log/audit'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_var_log_audit_nosuid | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_log_audit_nosuid
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82921-8
  - NIST-800-53-CM-7

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_var_log_audit_nosuid | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_log_audit_nosuid
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82921-8
  - NIST-800-53-CM-7

- name: Ensure permission nosuid are set on /var/log/audit
  mount:
    path: /var/log/audit
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nosuid'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_var_log_audit_nosuid | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_log_audit_nosuid
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82921-8
  - NIST-800-53-CM-7

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/tmp'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_noexec | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_tmp_noexec
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82139-7
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_noexec | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_tmp_noexec
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82139-7
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure permission noexec are set on /tmp
  mount:
    path: /tmp
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},noexec'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_noexec | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_tmp_noexec
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82139-7
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/dev/shm'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_noexec | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_noexec
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80838-6
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_noexec | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_noexec
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80838-6
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure permission noexec are set on /dev/shm
  mount:
    path: /dev/shm
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},noexec'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_noexec | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_noexec
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80838-6
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/dev/shm'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_dev_shm_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80837-8
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_dev_shm_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80837-8
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure permission nodev are set on /dev/shm
  mount:
    path: /dev/shm
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nodev'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_dev_shm_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80837-8
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/home'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_home_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_home_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81050-7
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_home_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_home_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81050-7
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure permission nosuid are set on /home
  mount:
    path: /home
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nosuid'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_home_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_home_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81050-7
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/tmp'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - high_disruption | bool
  - low_complexity | bool
  tags:
  - mount_option_tmp_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82140-5
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - high_disruption | bool
  - low_complexity | bool
  tags:
  - mount_option_tmp_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82140-5
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure permission nosuid are set on /tmp
  mount:
    path: /tmp
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nosuid'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - high_disruption | bool
  - low_complexity | bool
  tags:
  - mount_option_tmp_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82140-5
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure sysctl kernel.kptr_restrict is set to 1
  sysctl:
    name: kernel.kptr_restrict
    value: '1'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_kernel_kptr_restrict | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_kernel_kptr_restrict
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80915-2
  - NIST-800-53-SC-39

- name: check slub_debug argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*slub_debug=' /etc/default/grub
  failed_when: false
  register: argcheck
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_slub_debug_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_slub_debug_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80945-9

- name: replace existing slub_debug argument
  replace:
    path: /etc/default/grub
    regexp: slub_debug=.
    replace: slub_debug=P
  when:
  - argcheck.rc == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_slub_debug_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_slub_debug_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80945-9

- name: add slub_debug argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 slub_debug=P"
  when:
  - argcheck.rc != 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_slub_debug_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_slub_debug_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80945-9

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="slub_debug=P"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_slub_debug_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_slub_debug_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80945-9

- name: check page_poison argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*page_poison=' /etc/default/grub
  failed_when: false
  register: argcheck
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - grub2_page_poison_argument | bool
  - low_disruption | bool
  tags:
  - grub2_page_poison_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80944-2

- name: replace existing page_poison argument
  replace:
    path: /etc/default/grub
    regexp: page_poison=.
    replace: page_poison=1
  when:
  - argcheck.rc == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - grub2_page_poison_argument | bool
  - low_disruption | bool
  tags:
  - grub2_page_poison_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80944-2

- name: add page_poison argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 page_poison=1"
  when:
  - argcheck.rc != 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - grub2_page_poison_argument | bool
  - low_disruption | bool
  tags:
  - grub2_page_poison_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80944-2

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="page_poison=1"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - grub2_page_poison_argument | bool
  - low_disruption | bool
  tags:
  - grub2_page_poison_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80944-2

- name: disable core dumps with limits
  lineinfile:
    dest: /etc/security/limits.conf
    regexp: ^[^#].*core
    line: '*        hard       core      0'
  tags:
  - disable_users_coredumps
  - unknown_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-81038-2
  when:
  - unknown_severity | bool
  - no_reboot_needed | bool
  - disable_users_coredumps | bool
  - restrict_strategy | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure sysctl net.core.bpf_jit_harden is set to 2
  sysctl:
    name: net.core.bpf_jit_harden
    value: '2'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - sysctl_net_core_bpf_jit_harden | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_core_bpf_jit_harden
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-82934-1

- name: Ensure sysctl kernel.perf_event_paranoid is set to 2
  sysctl:
    name: kernel.perf_event_paranoid
    value: '2'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - sysctl_kernel_perf_event_paranoid | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_kernel_perf_event_paranoid
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-81054-9

- name: check vsyscall argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*vsyscall=' /etc/default/grub
  failed_when: false
  register: argcheck
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - grub2_vsyscall_argument | bool
  - low_disruption | bool
  tags:
  - grub2_vsyscall_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80946-7

- name: replace existing vsyscall argument
  replace:
    path: /etc/default/grub
    regexp: vsyscall=.
    replace: vsyscall=none
  when:
  - argcheck.rc == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - grub2_vsyscall_argument | bool
  - low_disruption | bool
  tags:
  - grub2_vsyscall_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80946-7

- name: add vsyscall argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 vsyscall=none"
  when:
  - argcheck.rc != 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - grub2_vsyscall_argument | bool
  - low_disruption | bool
  tags:
  - grub2_vsyscall_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80946-7

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="vsyscall=none"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - grub2_vsyscall_argument | bool
  - low_disruption | bool
  tags:
  - grub2_vsyscall_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80946-7

- name: Ensure sysctl kernel.yama.ptrace_scope is set to 1
  sysctl:
    name: kernel.yama.ptrace_scope
    value: '1'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_kernel_yama_ptrace_scope | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_kernel_yama_ptrace_scope
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80953-3

- name: Ensure sysctl kernel.unprivileged_bpf_disabled is set to 1
  sysctl:
    name: kernel.unprivileged_bpf_disabled
    value: '1'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_kernel_unprivileged_bpf_disabled | bool
  - low_complexity | bool
  tags:
  - sysctl_kernel_unprivileged_bpf_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-82974-7

- name: Ensure sysctl kernel.core_pattern is set to |/bin/false
  sysctl:
    name: kernel.core_pattern
    value: '|/bin/false'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_disruption | bool
  - sysctl_kernel_core_pattern | bool
  - low_complexity | bool
  tags:
  - sysctl_kernel_core_pattern
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-82215-5

- name: Ensure sysctl kernel.kexec_load_disabled is set to 1
  sysctl:
    name: kernel.kexec_load_disabled
    value: '1'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - sysctl_kernel_kexec_load_disabled | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_kernel_kexec_load_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80952-5

- name: Ensure sysctl kernel.dmesg_restrict is set to 1
  sysctl:
    name: kernel.dmesg_restrict
    value: '1'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_kernel_dmesg_restrict | bool
  - low_complexity | bool
  tags:
  - sysctl_kernel_dmesg_restrict
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80913-7
  - NIST-800-53-SI-11
  - NIST-800-171-3.1.5

- name: Ensure libreswan is installed
  package:
    name: libreswan
    state: present
  tags:
  - package_libreswan_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80845-1
  - NIST-800-53-AC-17
  - NIST-800-53-MA-4
  - NIST-800-53-SC-9
  - PCI-DSS-Req-4.1
  when:
  - no_reboot_needed | bool
  - medium_severity | bool
  - package_libreswan_installed | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure kernel module 'atm' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/atm.conf
    regexp: atm
    line: install atm /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - kernel_module_atm_disabled | bool
  - reboot_required | bool
  - disable_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - kernel_module_atm_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-82028-2

- name: Ensure kernel module 'can' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/can.conf
    regexp: can
    line: install can /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - kernel_module_can_disabled | bool
  - low_complexity | bool
  tags:
  - kernel_module_can_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-82059-7

- name: Ensure kernel module 'firewire-core' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/firewire-core.conf
    regexp: firewire-core
    line: install firewire-core /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - reboot_required | bool
  - low_complexity | bool
  tags:
  - kernel_module_firewire-core_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-82005-0

- name: Ensure kernel module 'tipc' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/tipc.conf
    regexp: tipc
    line: install tipc /bin/true
  tags:
  - kernel_module_tipc_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-82297-3
  - NIST-800-53-CM-7
  when:
  - disable_strategy | bool
  - kernel_module_tipc_disabled | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Ensure sysctl net.ipv6.conf.all.accept_ra is set
  sysctl:
    name: net.ipv6.conf.all.accept_ra
    value: '{{ sysctl_net_ipv6_conf_all_accept_ra_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv6_conf_all_accept_ra | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_all_accept_ra
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-81006-9
  - NIST-800-53-CM-7
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv6.conf.default.accept_redirects is set
  sysctl:
    name: net.ipv6.conf.default.accept_redirects
    value: '{{ sysctl_net_ipv6_conf_default_accept_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_net_ipv6_conf_default_accept_redirects | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_default_accept_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-81010-1
  - NIST-800-53-CM-7
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv6.conf.default.accept_source_route is set
  sysctl:
    name: net.ipv6.conf.default.accept_source_route
    value: '{{ sysctl_net_ipv6_conf_default_accept_source_route_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sysctl_net_ipv6_conf_default_accept_source_route | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_default_accept_source_route
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-81015-0
  - NIST-800-53-AC-4
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv6.conf.all.accept_redirects is set
  sysctl:
    name: net.ipv6.conf.all.accept_redirects
    value: '{{ sysctl_net_ipv6_conf_all_accept_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv6_conf_all_accept_redirects | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_all_accept_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-81009-3
  - NIST-800-53-CM-7
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv6.conf.all.accept_source_route is set
  sysctl:
    name: net.ipv6.conf.all.accept_source_route
    value: '{{ sysctl_net_ipv6_conf_all_accept_source_route_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_net_ipv6_conf_all_accept_source_route | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_all_accept_source_route
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-81013-5
  - NIST-800-53-AC-4
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv6.conf.default.accept_ra is set
  sysctl:
    name: net.ipv6.conf.default.accept_ra
    value: '{{ sysctl_net_ipv6_conf_default_accept_ra_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv6_conf_default_accept_ra | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_default_accept_ra
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-81007-7
  - NIST-800-53-CM-7
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.ip_forward is set to 0
  sysctl:
    name: net.ipv4.ip_forward
    value: '0'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv4_ip_forward | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_ip_forward
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-81024-2
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5
  - NIST-800-53-SC-32
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.default.send_redirects is set to 0
  sysctl:
    name: net.ipv4.conf.default.send_redirects
    value: '0'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_net_ipv4_conf_default_send_redirects | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_send_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80921-0
  - NIST-800-53-AC-4
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5
  - NIST-800-53-SC-7
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1

- name: Ensure sysctl net.ipv4.conf.all.send_redirects is set to 0
  sysctl:
    name: net.ipv4.conf.all.send_redirects
    value: '0'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_net_ipv4_conf_all_send_redirects | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_send_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80918-6
  - NIST-800-53-AC-4
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5(1)
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1

- name: Ensure sysctl net.ipv4.conf.all.accept_source_route is set
  sysctl:
    name: net.ipv4.conf.all.accept_source_route
    value: '{{ sysctl_net_ipv4_conf_all_accept_source_route_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_net_ipv4_conf_all_accept_source_route | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_accept_source_route
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-81011-9
  - NIST-800-53-AC-4
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.all.rp_filter is set
  sysctl:
    name: net.ipv4.conf.all.rp_filter
    value: '{{ sysctl_net_ipv4_conf_all_rp_filter_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - sysctl_net_ipv4_conf_all_rp_filter | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_rp_filter
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-81021-8
  - NIST-800-53-AC-4
  - NIST-800-53-SC-5
  - NIST-800-53-SC-7
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.tcp_syncookies is set
  sysctl:
    name: net.ipv4.tcp_syncookies
    value: '{{ sysctl_net_ipv4_tcp_syncookies_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_net_ipv4_tcp_syncookies | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_tcp_syncookies
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80923-6
  - NIST-800-53-AC-4
  - NIST-800-53-SC-5(1)(2)
  - NIST-800-53-SC-5(2)
  - NIST-800-53-SC-5(3)
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1

- name: Ensure sysctl net.ipv4.conf.all.log_martians is set
  sysctl:
    name: net.ipv4.conf.all.log_martians
    value: '{{ sysctl_net_ipv4_conf_all_log_martians_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv4_conf_all_log_martians | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_log_martians
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-81018-4
  - NIST-800-53-AC-17(7)
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5(3)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.default.accept_redirects is set
  sysctl:
    name: net.ipv4.conf.default.accept_redirects
    value: '{{ sysctl_net_ipv4_conf_default_accept_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sysctl_net_ipv4_conf_default_accept_redirects | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_accept_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80919-4
  - NIST-800-53-AC-4
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5
  - NIST-800-53-SC-7
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1

- name: Ensure sysctl net.ipv4.conf.all.secure_redirects is set
  sysctl:
    name: net.ipv4.conf.all.secure_redirects
    value: '{{ sysctl_net_ipv4_conf_all_secure_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sysctl_net_ipv4_conf_all_secure_redirects | bool
  - reboot_required | bool
  - disable_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_secure_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-81016-8
  - NIST-800-53-AC-4
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.all.accept_redirects is set
  sysctl:
    name: net.ipv4.conf.all.accept_redirects
    value: '{{ sysctl_net_ipv4_conf_all_accept_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv4_conf_all_accept_redirects | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_accept_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80917-8
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1

- name: Ensure sysctl net.ipv4.conf.default.rp_filter is set
  sysctl:
    name: net.ipv4.conf.default.rp_filter
    value: '{{ sysctl_net_ipv4_conf_default_rp_filter_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sysctl_net_ipv4_conf_default_rp_filter | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_rp_filter
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-81022-6
  - NIST-800-53-AC-4
  - NIST-800-53-SC-5
  - NIST-800-53-SC-7
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.default.log_martians is set
  sysctl:
    name: net.ipv4.conf.default.log_martians
    value: '{{ sysctl_net_ipv4_conf_default_log_martians_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - sysctl_net_ipv4_conf_default_log_martians | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_log_martians
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-81020-0
  - NIST-800-53-AC-17(7)
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5(3)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.default.accept_source_route is set
  sysctl:
    name: net.ipv4.conf.default.accept_source_route
    value: '{{ sysctl_net_ipv4_conf_default_accept_source_route_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sysctl_net_ipv4_conf_default_accept_source_route | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_accept_source_route
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80920-2
  - NIST-800-53-AC-4
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5
  - NIST-800-53-SC-7
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1

- name: Ensure sysctl net.ipv4.conf.default.secure_redirects is set
  sysctl:
    name: net.ipv4.conf.default.secure_redirects
    value: '{{ sysctl_net_ipv4_conf_default_secure_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_net_ipv4_conf_default_secure_redirects | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_secure_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-81017-6
  - NIST-800-53-AC-4
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5
  - NIST-800-53-SC-7
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.icmp_echo_ignore_broadcasts is set
  sysctl:
    name: net.ipv4.icmp_echo_ignore_broadcasts
    value: '{{ sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_net_ipv4_icmp_echo_ignore_broadcasts | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_icmp_echo_ignore_broadcasts
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80922-8
  - NIST-800-53-AC-4
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1

- name: Ensure sysctl net.ipv4.icmp_ignore_bogus_error_responses is set
  sysctl:
    name: net.ipv4.icmp_ignore_bogus_error_responses
    value: '{{ sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_disruption | bool
  - sysctl_net_ipv4_icmp_ignore_bogus_error_responses | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_icmp_ignore_bogus_error_responses
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-81023-4
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5
  - NIST-800-171-3.1.20

- name: Ensure kernel module 'bluetooth' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/bluetooth.conf
    regexp: bluetooth
    line: install bluetooth /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - kernel_module_bluetooth_disabled | bool
  - reboot_required | bool
  - disable_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - kernel_module_bluetooth_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80832-9
  - NIST-800-53-AC-17(8)
  - NIST-800-53-AC-18(a)
  - NIST-800-53-AC-18(d)
  - NIST-800-53-AC-18(3)
  - NIST-800-53-CM-7
  - NIST-800-53-MP-7
  - NIST-800-171-3.1.16
  - CJIS-5.13.1.3

- name: Ensure firewalld is installed
  package:
    name: firewalld
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - package_firewalld_installed | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - package_firewalld_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82998-6

- name: Enable service firewalld
  service:
    name: firewalld
    enabled: 'yes'
    state: started
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_firewalld_enabled | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_firewalld_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80877-4
  - NIST-800-53-CM-6(b)
  - NIST-800-171-3.1.3
  - NIST-800-171-3.4.7

- name: Configure auditd Flush Priority
  lineinfile:
    dest: /etc/audit/auditd.conf
    regexp: ^\s*flush\s*=\s*.*$
    line: flush = {{ var_auditd_flush }}
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - auditd_data_retention_flush | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - auditd_data_retention_flush
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80680-2
  - NIST-800-53-AU-9
  - NIST-800-53-AU-12(1)
  - NIST-800-171-3.3.1

- name: enable syslog plugin
  lineinfile:
    dest: /etc/audit/plugins.d/syslog.conf
    regexp: ^active
    line: active = yes
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - auditd_audispd_syslog_plugin_activated | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - auditd_audispd_syslog_plugin_activated
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80677-8
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-3(2)
  - NIST-800-53-IR-5
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.5.3
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/crontab.*$
    patterns: '*.rules'
  register: find_crontab
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_crontab | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_crontab
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80727-1
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_crontab.matched is defined and find_crontab.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_crontab | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_crontab
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80727-1
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_crontab.files | map(attribute=''path'') | list | first }}'
  when:
  - find_crontab.matched is defined and find_crontab.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_crontab | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_crontab
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80727-1
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the crontab rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/crontab -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_crontab | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_crontab
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80727-1
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the crontab rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/crontab -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_crontab | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_crontab
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80727-1
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/gpasswd.*$
    patterns: '*.rules'
  register: find_gpasswd
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_gpasswd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_gpasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80728-9
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_gpasswd.matched is defined and find_gpasswd.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_gpasswd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_gpasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80728-9
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_gpasswd.files | map(attribute=''path'') | list | first }}'
  when:
  - find_gpasswd.matched is defined and find_gpasswd.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_gpasswd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_gpasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80728-9
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the gpasswd rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_gpasswd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_gpasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80728-9
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the gpasswd rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_gpasswd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_gpasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80728-9
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/passwd.*$
    patterns: '*.rules'
  register: find_passwd
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_passwd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80731-3
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_passwd.matched is defined and find_passwd.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_passwd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80731-3
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_passwd.files | map(attribute=''path'') | list | first }}'
  when:
  - find_passwd.matched is defined and find_passwd.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_passwd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80731-3
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the passwd rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/passwd -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_passwd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80731-3
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the passwd rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/passwd -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_passwd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80731-3
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/newgrp.*$
    patterns: '*.rules'
  register: find_newgrp
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_newgrp | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgrp
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80729-7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_newgrp.matched is defined and find_newgrp.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_newgrp | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgrp
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80729-7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_newgrp.files | map(attribute=''path'') | list | first }}'
  when:
  - find_newgrp.matched is defined and find_newgrp.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_newgrp | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgrp
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80729-7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the newgrp rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_newgrp | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgrp
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80729-7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the newgrp rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_newgrp | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgrp
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80729-7
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/mount.*$
    patterns: '*.rules'
  register: find_mount
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_mount | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_mount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80989-7
  - NIST-800-53-AU-12(c)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_mount.matched is defined and find_mount.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_mount | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_mount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80989-7
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_mount.files | map(attribute=''path'') | list | first }}'
  when:
  - find_mount.matched is defined and find_mount.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_mount | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_mount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80989-7
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the mount rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/mount -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_mount | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_mount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80989-7
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the mount rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/mount -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_mount | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_mount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80989-7
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/unix_chkpwd.*$
    patterns: '*.rules'
  register: find_unix_chkpwd
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_unix_chkpwd | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_unix_chkpwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80740-4
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_unix_chkpwd.matched is defined and find_unix_chkpwd.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_unix_chkpwd | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_unix_chkpwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80740-4
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_unix_chkpwd.files | map(attribute=''path'') | list | first }}'
  when:
  - find_unix_chkpwd.matched is defined and find_unix_chkpwd.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_unix_chkpwd | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_unix_chkpwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80740-4
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the unix_chkpwd rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/unix_chkpwd -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_unix_chkpwd | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_unix_chkpwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80740-4
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the unix_chkpwd rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/unix_chkpwd -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_unix_chkpwd | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_unix_chkpwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80740-4
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/newuidmap.*$
    patterns: '*.rules'
  register: find_newuidmap
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_newuidmap | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newuidmap
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80992-1
  - NIST-800-53-AU-12(c)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_newuidmap.matched is defined and find_newuidmap.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_newuidmap | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newuidmap
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80992-1
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_newuidmap.files | map(attribute=''path'') | list | first }}'
  when:
  - find_newuidmap.matched is defined and find_newuidmap.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_newuidmap | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newuidmap
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80992-1
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the newuidmap rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/newuidmap -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_newuidmap | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newuidmap
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80992-1
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the newuidmap rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/newuidmap -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_newuidmap | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newuidmap
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80992-1
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/userhelper.*$
    patterns: '*.rules'
  register: find_userhelper
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_userhelper | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_userhelper
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80741-2
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_userhelper.matched is defined and find_userhelper.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_userhelper | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_userhelper
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80741-2
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_userhelper.files | map(attribute=''path'') | list | first }}'
  when:
  - find_userhelper.matched is defined and find_userhelper.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_userhelper | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_userhelper
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80741-2
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the userhelper rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/userhelper -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_userhelper | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_userhelper
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80741-2
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the userhelper rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/userhelper -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_userhelper | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_userhelper
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80741-2
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/at.*$
    patterns: '*.rules'
  register: find_at
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80988-9
  - NIST-800-53-AU-12(c)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_at.matched is defined and find_at.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80988-9
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_at.files | map(attribute=''path'') | list | first }}'
  when:
  - find_at.matched is defined and find_at.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80988-9
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the at rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/at -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80988-9
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the at rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/at -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80988-9
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/usernetctl.*$
    patterns: '*.rules'
  register: find_usernetctl
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_usernetctl | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_usernetctl
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80990-5
  - NIST-800-53-AU-12(c)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_usernetctl.matched is defined and find_usernetctl.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_usernetctl | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_usernetctl
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80990-5
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_usernetctl.files | map(attribute=''path'') | list | first }}'
  when:
  - find_usernetctl.matched is defined and find_usernetctl.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_usernetctl | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_usernetctl
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80990-5
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the usernetctl rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/usernetctl -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_usernetctl | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_usernetctl
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80990-5
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the usernetctl rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/usernetctl -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_usernetctl | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_usernetctl
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80990-5
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/newgidmap.*$
    patterns: '*.rules'
  register: find_newgidmap
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_newgidmap | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgidmap
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80991-3
  - NIST-800-53-AU-12(c)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_newgidmap.matched is defined and find_newgidmap.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_newgidmap | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgidmap
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80991-3
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_newgidmap.files | map(attribute=''path'') | list | first }}'
  when:
  - find_newgidmap.matched is defined and find_newgidmap.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_newgidmap | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgidmap
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80991-3
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the newgidmap rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/newgidmap -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_newgidmap | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgidmap
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80991-3
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the newgidmap rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/newgidmap -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_newgidmap | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgidmap
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80991-3
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/umount.*$
    patterns: '*.rules'
  register: find_umount
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_umount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80739-6
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_umount.matched is defined and find_umount.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_umount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80739-6
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_umount.files | map(attribute=''path'') | list | first }}'
  when:
  - find_umount.matched is defined and find_umount.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_umount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80739-6
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the umount rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/umount -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_umount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80739-6
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the umount rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/umount -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_umount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80739-6
  - NIST-800-53-AU-3(1)
  - NIST-800-53-AU-12(c)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/seunshare.*$
    patterns: '*.rules'
  register: find_seunshare
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_execution_seunshare | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_seunshare
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80933-5
  - NIST-800-53-AU-12(c)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_seunshare.matched is defined and find_seunshare.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_execution_seunshare | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_seunshare
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80933-5
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_seunshare.files | map(attribute=''path'') | list | first }}'
  when:
  - find_seunshare.matched is defined and find_seunshare.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_execution_seunshare | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_seunshare
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80933-5
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the seunshare rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/seunshare -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_execution_seunshare | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_seunshare
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80933-5
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the seunshare rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/seunshare -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_execution_seunshare | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_seunshare
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80933-5
  - NIST-800-53-AU-12(c)

- name: Add unsuccessful file operations audit rules
  blockinfile:
    path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
    create: true
    block: '## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.

      ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

      ## The purpose of these rules is to meet the requirements for Operating

      ## System Protection Profile (OSPP)v4.2. These rules depends on having

      ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

      ## Unsuccessful file creation (open with O_CREAT)

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      ## Unsuccessful file modifications (open for write or truncate)

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      ## Unsuccessful file access (any other opens) This has to go last.

      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_unsuccessful_file_modification_openat_o_trunc_write | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat_o_trunc_write
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80963-2
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit fchmodat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fchmodat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80976-4
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchmodat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fchmodat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80976-4
  - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_fchmodat.matched is defined and find_fchmodat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fchmodat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80976-4
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchmodat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fchmodat.matched is defined and find_fchmodat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fchmodat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80976-4
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchmodat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S fchmodat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S fchmodat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fchmodat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80976-4
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchmodat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S fchmodat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S fchmodat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fchmodat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80976-4
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchmodat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S fchmodat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S fchmodat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fchmodat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80976-4
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchmodat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S fchmodat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S fchmodat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fchmodat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80976-4
  - NIST-800-53-AU-12(c)

- name: Add unsuccessful file operations audit rules
  blockinfile:
    path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
    create: true
    block: '## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.

      ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

      ## The purpose of these rules is to meet the requirements for Operating

      ## System Protection Profile (OSPP)v4.2. These rules depends on having

      ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

      ## Unsuccessful file creation (open with O_CREAT)

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      ## Unsuccessful file modifications (open for write or truncate)

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      ## Unsuccessful file access (any other opens) This has to go last.

      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_creat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_creat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80751-1
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Add unsuccessful file operations audit rules
  blockinfile:
    path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
    create: true
    block: '## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.

      ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

      ## The purpose of these rules is to meet the requirements for Operating

      ## System Protection Profile (OSPP)v4.2. These rules depends on having

      ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

      ## Unsuccessful file creation (open with O_CREAT)

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      ## Unsuccessful file modifications (open for write or truncate)

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      ## Unsuccessful file access (any other opens) This has to go last.

      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_unsuccessful_file_modification_openat_o_creat | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat_o_creat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80962-4
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit chmod tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chmod | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80975-6
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_chmod
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chmod | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80975-6
  - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_chmod.matched is defined and find_chmod.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chmod | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80975-6
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_chmod.files | map(attribute=''path'') | list | first }}'
  when:
  - find_chmod.matched is defined and find_chmod.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chmod | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80975-6
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the chmod rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S chmod -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S chmod -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chmod | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80975-6
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the chmod rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S chmod -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S chmod -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chmod | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80975-6
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the chmod rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S chmod -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S chmod -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chmod | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80975-6
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the chmod rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S chmod -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S chmod -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chmod | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80975-6
  - NIST-800-53-AU-12(c)

- name: Set architecture for audit ftruncate tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_ftruncate
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_ftruncate.matched is defined and find_ftruncate.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_ftruncate.files | map(attribute=''path'') | list | first }}'
  when:
  - find_ftruncate.matched is defined and find_ftruncate.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the ftruncate rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the ftruncate rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the ftruncate rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the ftruncate rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit fchown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80986-3
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchown
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80986-3
  - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_fchown.matched is defined and find_fchown.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80986-3
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchown.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fchown.matched is defined and find_fchown.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80986-3
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S fchown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S fchown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80986-3
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S fchown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S fchown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80986-3
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S fchown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S fchown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80986-3
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchown rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S fchown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S fchown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80986-3
  - NIST-800-53-AU-12(c)

- name: Set architecture for audit lsetxattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80981-4
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lsetxattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80981-4
  - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_lsetxattr.matched is defined and find_lsetxattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80981-4
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_lsetxattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_lsetxattr.matched is defined and find_lsetxattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80981-4
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lsetxattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S lsetxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S lsetxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80981-4
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lsetxattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S lsetxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S lsetxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80981-4
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lsetxattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S lsetxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S lsetxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80981-4
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lsetxattr rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S lsetxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S lsetxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80981-4
  - NIST-800-53-AU-12(c)

- name: Set architecture for audit truncate tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_truncate
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_truncate.matched is defined and find_truncate.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_truncate.files | map(attribute=''path'') | list | first }}'
  when:
  - find_truncate.matched is defined and find_truncate.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the truncate rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the truncate rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the truncate rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the truncate rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit unlinkat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80972-3
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_unlinkat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80972-3
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_unlinkat.matched is defined and find_unlinkat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80972-3
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_unlinkat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_unlinkat.matched is defined and find_unlinkat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80972-3
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the unlinkat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S unlinkat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S unlinkat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80972-3
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the unlinkat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S unlinkat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S unlinkat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80972-3
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the unlinkat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S unlinkat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S unlinkat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80972-3
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the unlinkat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S unlinkat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S unlinkat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80972-3
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit unlink tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80971-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_unlink
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80971-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_unlink.matched is defined and find_unlink.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80971-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_unlink.files | map(attribute=''path'') | list | first }}'
  when:
  - find_unlink.matched is defined and find_unlink.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80971-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the unlink rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S unlink -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S unlink -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80971-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the unlink rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S unlink -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S unlink -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80971-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the unlink rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S unlink -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S unlink -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80971-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the unlink rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S unlink -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S unlink -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80971-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit open_by_handle_at tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_open_by_handle_at
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Add unsuccessful file operations audit rules
  blockinfile:
    path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
    create: true
    block: '## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.

      ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

      ## The purpose of these rules is to meet the requirements for Operating

      ## System Protection Profile (OSPP)v4.2. These rules depends on having

      ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

      ## Unsuccessful file creation (open with O_CREAT)

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      ## Unsuccessful file modifications (open for write or truncate)

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      ## Unsuccessful file access (any other opens) This has to go last.

      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_unsuccessful_file_modification_open_o_trunc_write | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_o_trunc_write
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80969-9
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit fsetxattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80979-8
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fsetxattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80979-8
  - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_fsetxattr.matched is defined and find_fsetxattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80979-8
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fsetxattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fsetxattr.matched is defined and find_fsetxattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80979-8
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fsetxattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S fsetxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S fsetxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80979-8
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fsetxattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S fsetxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S fsetxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80979-8
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fsetxattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S fsetxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S fsetxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80979-8
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fsetxattr rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S fsetxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S fsetxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80979-8
  - NIST-800-53-AU-12(c)

- name: Add unsuccessful file operations audit rules
  blockinfile:
    path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
    create: true
    block: '## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.

      ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

      ## The purpose of these rules is to meet the requirements for Operating

      ## System Protection Profile (OSPP)v4.2. These rules depends on having

      ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

      ## Unsuccessful file creation (open with O_CREAT)

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      ## Unsuccessful file modifications (open for write or truncate)

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      ## Unsuccessful file access (any other opens) This has to go last.

      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_open_o_creat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_o_creat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80968-1
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit lchown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80987-1
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lchown
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80987-1
  - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_lchown.matched is defined and find_lchown.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80987-1
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_lchown.files | map(attribute=''path'') | list | first }}'
  when:
  - find_lchown.matched is defined and find_lchown.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80987-1
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lchown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S lchown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S lchown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80987-1
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lchown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S lchown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S lchown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80987-1
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lchown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S lchown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S lchown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80987-1
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lchown rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S lchown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S lchown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80987-1
  - NIST-800-53-AU-12(c)

- name: Set architecture for audit setxattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80983-0
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_setxattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80983-0
  - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_setxattr.matched is defined and find_setxattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80983-0
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_setxattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_setxattr.matched is defined and find_setxattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80983-0
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the setxattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S setxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S setxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80983-0
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the setxattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S setxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S setxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80983-0
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the setxattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S setxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S setxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80983-0
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the setxattr rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S setxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S setxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80983-0
  - NIST-800-53-AU-12(c)

- name: Set architecture for audit lremovexattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80980-6
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lremovexattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80980-6
  - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_lremovexattr.matched is defined and find_lremovexattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80980-6
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_lremovexattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_lremovexattr.matched is defined and find_lremovexattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80980-6
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lremovexattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S lremovexattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S lremovexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80980-6
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lremovexattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S lremovexattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S lremovexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80980-6
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lremovexattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S lremovexattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S lremovexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80980-6
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lremovexattr rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S lremovexattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S lremovexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80980-6
  - NIST-800-53-AU-12(c)

- name: Set architecture for audit renameat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_renameat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80974-9
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_renameat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_renameat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80974-9
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_renameat.matched is defined and find_renameat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_renameat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80974-9
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_renameat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_renameat.matched is defined and find_renameat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_renameat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80974-9
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the renameat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S renameat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S renameat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_renameat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80974-9
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the renameat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S renameat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S renameat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_renameat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80974-9
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the renameat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S renameat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S renameat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_renameat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80974-9
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the renameat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S renameat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S renameat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_renameat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80974-9
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit openat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_openat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_openat.matched is defined and find_openat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_openat.matched is defined and find_openat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the openat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the openat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the openat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit fchmod tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80977-2
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchmod
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80977-2
  - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_fchmod.matched is defined and find_fchmod.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80977-2
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchmod.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fchmod.matched is defined and find_fchmod.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80977-2
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchmod rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S fchmod -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S fchmod -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80977-2
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchmod rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S fchmod -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S fchmod -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80977-2
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchmod rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S fchmod -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S fchmod -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80977-2
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchmod rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S fchmod -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S fchmod -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80977-2
  - NIST-800-53-AU-12(c)

- name: Set architecture for audit chown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80984-8
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_chown
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80984-8
  - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_chown.matched is defined and find_chown.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80984-8
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_chown.files | map(attribute=''path'') | list | first }}'
  when:
  - find_chown.matched is defined and find_chown.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80984-8
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the chown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S chown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S chown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80984-8
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the chown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S chown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S chown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80984-8
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the chown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S chown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S chown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80984-8
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the chown rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S chown -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S chown -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80984-8
  - NIST-800-53-AU-12(c)

- name: Set architecture for audit rename tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_rename | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80973-1
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_rename
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_rename | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80973-1
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_rename.matched is defined and find_rename.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_rename | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80973-1
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_rename.files | map(attribute=''path'') | list | first }}'
  when:
  - find_rename.matched is defined and find_rename.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_rename | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80973-1
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the rename rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S rename -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S rename -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_rename | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80973-1
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the rename rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S rename -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S rename -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_rename | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80973-1
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the rename rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S rename -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S rename -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_rename | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80973-1
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the rename rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S rename -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S rename -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_rename | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80973-1
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit fchownat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_fchownat | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80985-5
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchownat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_fchownat | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80985-5
  - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_fchownat.matched is defined and find_fchownat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_fchownat | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80985-5
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchownat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fchownat.matched is defined and find_fchownat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_fchownat | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80985-5
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchownat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S fchownat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S fchownat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_fchownat | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80985-5
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchownat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S fchownat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S fchownat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_fchownat | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80985-5
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchownat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S fchownat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S fchownat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_fchownat | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80985-5
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchownat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S fchownat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S fchownat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_fchownat | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80985-5
  - NIST-800-53-AU-12(c)

- name: Add unsuccessful file operations audit rules
  blockinfile:
    path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
    create: true
    block: '## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.

      ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

      ## The purpose of these rules is to meet the requirements for Operating

      ## System Protection Profile (OSPP)v4.2. These rules depends on having

      ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

      ## Unsuccessful file creation (open with O_CREAT)

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      ## Unsuccessful file modifications (open for write or truncate)

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      ## Unsuccessful file access (any other opens) This has to go last.

      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at_o_creat | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at_o_creat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80965-7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit open tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_open
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_open.matched is defined and find_open.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open.matched is defined and find_open.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit removexattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_removexattr | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80982-2
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_removexattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_removexattr | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80982-2
  - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_removexattr.matched is defined and find_removexattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_removexattr | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80982-2
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_removexattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_removexattr.matched is defined and find_removexattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_removexattr | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80982-2
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the removexattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S removexattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S removexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_removexattr | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80982-2
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the removexattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S removexattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S removexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_removexattr | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80982-2
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the removexattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S removexattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S removexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_removexattr | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80982-2
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the removexattr rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S removexattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S removexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_unsuccessful_file_modification_removexattr | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80982-2
  - NIST-800-53-AU-12(c)

- name: Set architecture for audit fremovexattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80978-0
  - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fremovexattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80978-0
  - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_fremovexattr.matched is defined and find_fremovexattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80978-0
  - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fremovexattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fremovexattr.matched is defined and find_fremovexattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80978-0
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fremovexattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S fremovexattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S fremovexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80978-0
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fremovexattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S fremovexattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S fremovexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80978-0
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fremovexattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
  with_items:
  - -a always,exit -F arch=b32 -S fremovexattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S fremovexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80978-0
  - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fremovexattr rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S fremovexattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S fremovexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80978-0
  - NIST-800-53-AU-12(c)

- name: Add unsuccessful file operations audit rules
  blockinfile:
    path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
    create: true
    block: '## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.

      ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

      ## The purpose of these rules is to meet the requirements for Operating

      ## System Protection Profile (OSPP)v4.2. These rules depends on having

      ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

      ## Unsuccessful file creation (open with O_CREAT)

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      ## Unsuccessful file modifications (open for write or truncate)

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      ## Unsuccessful file access (any other opens) This has to go last.

      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at_o_trunc_write | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at_o_trunc_write
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80966-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit delete_module tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80711-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*delete_module.*$
    patterns: '*.rules'
  register: find_delete_module
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80711-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_delete_module.matched is defined and find_delete_module.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80711-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_delete_module.files | map(attribute=''path'') | list | first }}'
  when:
  - find_delete_module.matched is defined and find_delete_module.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80711-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the delete_module rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S delete_module -k module-change
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80711-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the delete_module rule in rules.d on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S delete_module -k module-change
    state: present
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80711-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the delete_module rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b32 -S delete_module -k module-change
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80711-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the delete_module rule in audit.rules when on x86_64
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b64 -S delete_module -k module-change
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80711-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Set architecture for audit init_module tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80713-1
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*init_module.*$
    patterns: '*.rules'
  register: find_init_module
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80713-1
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_init_module.matched is defined and find_init_module.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80713-1
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_init_module.files | map(attribute=''path'') | list | first }}'
  when:
  - find_init_module.matched is defined and find_init_module.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80713-1
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the init_module rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S init_module -k module-change
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80713-1
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the init_module rule in rules.d on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S init_module -k module-change
    state: present
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80713-1
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the init_module rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b32 -S init_module -k module-change
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80713-1
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the init_module rule in audit.rules when on x86_64
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b64 -S init_module -k module-change
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80713-1
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Set architecture for audit finit_module tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - audit_rules_kernel_module_loading_finit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_finit
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80712-3
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*finit_module.*$
    patterns: '*.rules'
  register: find_finit_module
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - audit_rules_kernel_module_loading_finit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_finit
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80712-3
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_finit_module.matched is defined and find_finit_module.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - audit_rules_kernel_module_loading_finit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_finit
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80712-3
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_finit_module.files | map(attribute=''path'') | list | first }}'
  when:
  - find_finit_module.matched is defined and find_finit_module.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - audit_rules_kernel_module_loading_finit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_finit
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80712-3
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the finit_module rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S finit_module -k module-change
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - audit_rules_kernel_module_loading_finit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_finit
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80712-3
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the finit_module rule in rules.d on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S finit_module -k module-change
    state: present
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - audit_rules_kernel_module_loading_finit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_finit
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80712-3
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the finit_module rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b32 -S finit_module -k module-change
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - audit_rules_kernel_module_loading_finit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_finit
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80712-3
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the finit_module rule in audit.rules when on x86_64
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b64 -S finit_module -k module-change
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - audit_rules_kernel_module_loading_finit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_finit
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80712-3
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Set architecture for audit shadow tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80762-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_shadow
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80762-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_shadow.matched is defined and find_shadow.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80762-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_shadow.files | map(attribute=''path'') | list | first }}'
  when:
  - find_shadow.matched is defined and find_shadow.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80762-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the shadow rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/shadow -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80762-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the shadow rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/shadow -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80762-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*dir=/var/log/audit/.*$
    patterns: '*.rules'
  register: find_var_log_audit
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - directory_access_var_log_audit | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - directory_access_var_log_audit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80941-8

- name: Use /etc/audit/rules.d/access-audit-trail.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access-audit-trail.rules
  when:
  - find_var_log_audit.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - directory_access_var_log_audit | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - directory_access_var_log_audit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80941-8

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_var_log_audit.files | map(attribute=''path'') | list | first }}'
  when:
  - find_var_log_audit.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - directory_access_var_log_audit | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - directory_access_var_log_audit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80941-8

- name: Inserts/replaces the /var/log/audit/ rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F dir=/var/log/audit/ -F perm=r -F auid>=1000 -F auid!=unset -F key=access-audit-trail
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - directory_access_var_log_audit | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - directory_access_var_log_audit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80941-8

- name: Inserts/replaces the /var/log/audit/ rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F dir=/var/log/audit/ -F perm=r -F auid>=1000 -F auid!=unset -F key=access-audit-trail
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - directory_access_var_log_audit | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - directory_access_var_log_audit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80941-8

- name: Set architecture for audit open tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80956-6

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*open(,[\S]+)?[\s]+-F[\s]+a1&03[\s]+-F[\s]+path=/etc/shadow.*
    patterns: '*.rules'
  register: find_open
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80956-6

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/modify.rules
  when:
  - find_open.matched is defined and find_open.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80956-6

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open.matched is defined and find_open.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80956-6

- name: Inserts/replaces the open rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80956-6

- name: Inserts/replaces the open rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80956-6

- name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    regexp: -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80956-6

- name: Inserts/replaces the open rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80956-6

- name: Set architecture for audit open_by_handle_at tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_passwd_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80932-7

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*open_by_handle_at(,[\S]+)?[\s]+-F[\s]+a2&03[\s]+-F[\s]+path=/etc/passwd.*
    patterns: '*.rules'
  register: find_open_by_handle_at
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_passwd_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80932-7

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/modify.rules
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_passwd_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80932-7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_passwd_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80932-7

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_passwd_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80932-7

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_passwd_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80932-7

- name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_passwd_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80932-7

- name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_etc_passwd_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80932-7

- name: Set architecture for audit gshadow tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80759-4
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_gshadow
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80759-4
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_gshadow.matched is defined and find_gshadow.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80759-4
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_gshadow.files | map(attribute=''path'') | list | first }}'
  when:
  - find_gshadow.matched is defined and find_gshadow.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80759-4
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the gshadow rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/gshadow -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80759-4
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the gshadow rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/gshadow -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80759-4
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Set architecture for audit passwd tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80761-0
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_passwd
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80761-0
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_passwd.matched is defined and find_passwd.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80761-0
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_passwd.files | map(attribute=''path'') | list | first }}'
  when:
  - find_passwd.matched is defined and find_passwd.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80761-0
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the passwd rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/passwd -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80761-0
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the passwd rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/passwd -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80761-0
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Set architecture for audit open_by_handle_at tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open_by_handle_at | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80957-4

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*open_by_handle_at(,[\S]+)?[\s]+-F[\s]+a2&03[\s]+-F[\s]+path=/etc/shadow.*
    patterns: '*.rules'
  register: find_open_by_handle_at
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open_by_handle_at | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80957-4

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/modify.rules
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open_by_handle_at | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80957-4

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open_by_handle_at | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80957-4

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open_by_handle_at | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80957-4

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open_by_handle_at | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80957-4

- name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open_by_handle_at | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80957-4

- name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_shadow_open_by_handle_at | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80957-4

- name: Set architecture for audit openat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_shadow_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80958-2

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*openat(,[\S]+)?[\s]+-F[\s]+a2&03[\s]+-F[\s]+path=/etc/shadow.*
    patterns: '*.rules'
  register: find_openat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_shadow_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80958-2

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/modify.rules
  when:
  - find_openat.matched is defined and find_openat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_shadow_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80958-2

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_openat.matched is defined and find_openat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_shadow_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80958-2

- name: Inserts/replaces the openat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_shadow_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80958-2

- name: Inserts/replaces the openat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_shadow_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80958-2

- name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    regexp: -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_shadow_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80958-2

- name: Inserts/replaces the openat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_etc_shadow_openat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_shadow_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80958-2

- name: Set architecture for audit open tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80930-1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*open(,[\S]+)?[\s]+-F[\s]+a1&03[\s]+-F[\s]+path=/etc/passwd.*
    patterns: '*.rules'
  register: find_open
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80930-1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/modify.rules
  when:
  - find_open.matched is defined and find_open.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80930-1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open.matched is defined and find_open.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80930-1

- name: Inserts/replaces the open rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80930-1

- name: Inserts/replaces the open rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80930-1

- name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    regexp: -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80930-1

- name: Inserts/replaces the open rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80930-1

- name: Set architecture for audit group tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80758-6
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_group
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80758-6
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_group.matched is defined and find_group.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80758-6
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_group.files | map(attribute=''path'') | list | first }}'
  when:
  - find_group.matched is defined and find_group.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80758-6
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the group rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/group -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80758-6
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the group rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/group -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80758-6
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-17(7)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-IR-5
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Set architecture for audit openat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80931-9

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*openat(,[\S]+)?[\s]+-F[\s]+a2&03[\s]+-F[\s]+path=/etc/passwd.*
    patterns: '*.rules'
  register: find_openat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80931-9

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/modify.rules
  when:
  - find_openat.matched is defined and find_openat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80931-9

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_openat.matched is defined and find_openat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80931-9

- name: Inserts/replaces the openat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80931-9

- name: Inserts/replaces the openat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80931-9

- name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    regexp: -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80931-9

- name: Inserts/replaces the openat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=[\S]+
  with_items:
  - -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=modify
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_etc_passwd_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_etc_passwd_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80931-9

- name: check audit_backlog_limit argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*audit_backlog_limit=' /etc/default/grub
  failed_when: false
  register: argcheck
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_backlog_limit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_backlog_limit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80943-4

- name: replace existing audit_backlog_limit argument
  replace:
    path: /etc/default/grub
    regexp: audit_backlog_limit=.
    replace: audit_backlog_limit=8192
  when:
  - argcheck.rc == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_backlog_limit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_backlog_limit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80943-4

- name: add audit_backlog_limit argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 audit_backlog_limit=8192"
  when:
  - argcheck.rc != 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_backlog_limit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_backlog_limit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80943-4

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="audit_backlog_limit=8192"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_backlog_limit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_backlog_limit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80943-4

- name: check audit argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*audit=' /etc/default/grub
  failed_when: false
  register: argcheck
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80825-3
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-10
  - NIST-800-53-AU-12
  - NIST-800-53-IR-5
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.3
  - CJIS-5.4.1.1

- name: replace existing audit argument
  replace:
    path: /etc/default/grub
    regexp: audit=.
    replace: audit=1
  when:
  - argcheck.rc == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80825-3
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-10
  - NIST-800-53-AU-12
  - NIST-800-53-IR-5
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.3
  - CJIS-5.4.1.1

- name: add audit argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 audit=1"
  when:
  - argcheck.rc != 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80825-3
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-10
  - NIST-800-53-AU-12
  - NIST-800-53-IR-5
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.3
  - CJIS-5.4.1.1

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="audit=1"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80825-3
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-10
  - NIST-800-53-AU-12
  - NIST-800-53-IR-5
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.3
  - CJIS-5.4.1.1

- name: Enable service auditd
  service:
    name: auditd
    enabled: 'yes'
    state: started
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - high_severity | bool
  - enable_strategy | bool
  - service_auditd_enabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_auditd_enabled
  - high_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80872-5
  - NIST-800-53-AC-2(g)
  - NIST-800-53-AU-3
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-10
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-IR-5
  - NIST-800-171-3.3.1
  - NIST-800-171-3.3.2
  - NIST-800-171-3.3.6
  - PCI-DSS-Req-10.1
  - CJIS-5.4.1.1

- name: Configure the tmux Lock Command
  block:
  - name: Deduplicate values from /etc/tmux.conf
    lineinfile:
      path: /etc/tmux.conf
      create: false
      regexp: ^\s*set -g lock-command\s+
      state: absent
  - name: Insert correct line to /etc/tmux.conf
    lineinfile:
      path: /etc/tmux.conf
      create: true
      line: set -g lock-command vlock
      state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - configure_tmux_lock_command | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - configure_tmux_lock_command
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80940-0
  - NIST-800-53-AC-11(a)
  - NIST-800-53-AC-11(b)

- name: Ensure tmux is installed
  package:
    name: tmux
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - package_tmux_installed | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - package_tmux_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80644-8
  - NIST-800-53-AC-11(a)
  - NIST-800-171-3.1.10

- name: Disable Ctrl-Alt-Del Reboot Activation
  systemd:
    name: ctrl-alt-del.target
    masked: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - disable_ctrlaltdel_reboot | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - disable_ctrlaltdel_reboot
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80785-9
  - NIST-800-53-AC-6
  - NIST-800-171-3.4.5

- name: Verify that Interactive Boot is Disabled in /etc/default/grub
  replace:
    dest: /etc/default/grub
    regexp: systemd.confirm_spawn=(1|yes|true|on)
    replace: systemd.confirm_spawn=no
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_disable_interactive_boot | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - grub2_disable_interactive_boot
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80826-1
  - NIST-800-53-SC-2
  - NIST-800-53-AC-3
  - NIST-800-171-3.1.2
  - NIST-800-171-3.4.5

- name: Verify that Interactive Boot is Disabled (runtime)
  command: /sbin/grubby --update-kernel=ALL --remove-args="systemd.confirm_spawn"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_disable_interactive_boot | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - grub2_disable_interactive_boot
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80826-1
  - NIST-800-53-SC-2
  - NIST-800-53-AC-3
  - NIST-800-171-3.1.2
  - NIST-800-171-3.4.5

- name: Disable service debug-shell
  service:
    name: debug-shell
    enabled: 'no'
    state: stopped
  register: service_result
  failed_when: service_result is failed and ('Could not find the requested service' not in service_result.msg)
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_debug-shell_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80876-6
  - NIST-800-171-3.4.5

- name: Disable socket of service debug-shell if applicable
  service:
    name: debug-shell.socket
    enabled: 'no'
    state: stopped
  register: socket_result
  failed_when: socket_result is failed and ('Could not find the requested service' not in socket_result.msg)
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_debug-shell_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80876-6
  - NIST-800-171-3.4.5

- name: require single user mode password
  lineinfile:
    create: true
    dest: /usr/lib/systemd/system/rescue.service
    regexp: ^#?ExecStart=
    line: ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - require_singleuser_auth | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - require_singleuser_auth
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80855-0
  - NIST-800-53-IA-2
  - NIST-800-53-IA-2(1)
  - NIST-800-53-AC-3
  - NIST-800-171-3.1.1
  - NIST-800-171-3.4.5

- name: Disable Ctrl-Alt-Del Burst Action
  lineinfile:
    dest: /etc/systemd/system.conf
    state: present
    regexp: ^CtrlAltDelBurstAction
    line: CtrlAltDelBurstAction=none
  tags:
  - disable_ctrlaltdel_burstaction
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80784-2
  - NIST-800-53-AC-6
  - NIST-800-171-3.4.5
  when:
  - disable_strategy | bool
  - no_reboot_needed | bool
  - disable_ctrlaltdel_burstaction | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Set user umask in /etc/bashrc
  replace:
    path: /etc/bashrc
    regexp: umask.*
    replace: umask {{ var_accounts_user_umask }}
  tags:
  - accounts_umask_etc_bashrc
  - unknown_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-81036-6
  - NIST-800-53-SA-8
  when:
  - unknown_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_umask_etc_bashrc | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Set user umask in /etc/profile
  replace:
    path: /etc/profile
    regexp: umask.*
    replace: umask {{ var_accounts_user_umask }}
  tags:
  - accounts_umask_etc_profile
  - unknown_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-81035-8
  - NIST-800-53-SA-8
  when:
  - unknown_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_umask_etc_profile | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Set user umask in /etc/csh.cshrc
  replace:
    path: /etc/csh.cshrc
    regexp: umask.*
    replace: umask {{ var_accounts_user_umask }}
  tags:
  - accounts_umask_etc_csh_cshrc
  - unknown_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-81037-4
  - NIST-800-53-SA-8
  when:
  - unknown_severity | bool
  - accounts_umask_etc_csh_cshrc | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Limit the Number of Concurrent Login Sessions Allowed Per User
  lineinfile:
    state: present
    dest: /etc/security/limits.conf
    insertbefore: ^# End of file
    regexp: ^#?\*.*maxlogins
    line: '*           hard    maxlogins     {{ var_accounts_max_concurrent_login_sessions }}'
  tags:
  - accounts_max_concurrent_login_sessions
  - low_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80955-8
  - NIST-800-53-AC-10
  - CJIS-5.5.2.2
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_max_concurrent_login_sessions | bool
  - low_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable maxrepeat is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*maxrepeat
    line: maxrepeat = {{ var_password_pam_maxrepeat }}
  tags:
  - accounts_password_pam_maxrepeat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82066-2
  - NIST-800-53-IA-5
  - NIST-800-53-IA-5(c)
  when:
  - accounts_password_pam_maxrepeat | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable dcredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*dcredit
    line: dcredit = {{ var_password_pam_dcredit }}
  tags:
  - accounts_password_pam_dcredit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80653-9
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-53-IA-5(b)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-194
  - PCI-DSS-Req-8.2.3
  when:
  - accounts_password_pam_dcredit | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable lcredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*lcredit
    line: lcredit = {{ var_password_pam_lcredit }}
  tags:
  - accounts_password_pam_lcredit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80655-4
  - NIST-800-53-IA-5(b)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - PCI-DSS-Req-8.2.3
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_password_pam_lcredit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable ocredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*ocredit
    line: ocredit = {{ var_password_pam_ocredit }}
  tags:
  - accounts_password_pam_ocredit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80663-8
  - NIST-800-53-IA-5(b)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_password_pam_ocredit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable minlen is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*minlen
    line: minlen = {{ var_password_pam_minlen }}
  tags:
  - accounts_password_pam_minlen
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80656-2
  - NIST-800-53-IA-5(1)(a)
  - PCI-DSS-Req-8.2.3
  - CJIS-5.6.2.1.1
  when:
  - accounts_password_pam_minlen | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable difok is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*difok
    line: difok = {{ var_password_pam_difok }}
  tags:
  - accounts_password_pam_difok
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80654-7
  - NIST-800-53-IA-5(b)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(b)
  - CJIS-5.6.2.1.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_password_pam_difok | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable maxclassrepeat is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*maxclassrepeat
    line: maxclassrepeat = {{ var_password_pam_maxclassrepeat }}
  tags:
  - accounts_password_pam_maxclassrepeat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-81034-1
  - NIST-800-53-IA-5
  - NIST-800-53-IA-5(c)
  when:
  - accounts_password_pam_maxclassrepeat | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable ucredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*ucredit
    line: ucredit = {{ var_password_pam_ucredit }}
  tags:
  - accounts_password_pam_ucredit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80665-3
  - NIST-800-53-IA-5(b)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - PCI-DSS-Req-8.2.3
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_password_pam_ucredit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock preauth unlock_time before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80670-3
  - NIST-800-53-AC-7(b)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.7
  - CJIS-5.5.3
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add unlock_time argument to pam_faillock preauth
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80670-3
  - NIST-800-53-AC-7(b)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.7
  - CJIS-5.5.3
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock authfail unlock_interval after pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: after
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80670-3
  - NIST-800-53-AC-7(b)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.7
  - CJIS-5.5.3
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add unlock_time argument to auth pam_faillock authfail
  pamd:
    name: '{{ item }}'
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80670-3
  - NIST-800-53-AC-7(b)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.7
  - CJIS-5.5.3
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80670-3
  - NIST-800-53-AC-7(b)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.7
  - CJIS-5.5.3
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock preauth deny before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80667-9
  - NIST-800-53-AC-7(a)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.6
  - CJIS-5.5.3
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add deny argument to auth pam_faillock preauth
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80667-9
  - NIST-800-53-AC-7(a)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.6
  - CJIS-5.5.3
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock authfail deny after pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: after
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80667-9
  - NIST-800-53-AC-7(a)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.6
  - CJIS-5.5.3
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add deny argument to auth pam_faillock authfail
  pamd:
    name: '{{ item }}'
    type: auth
    new_type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80667-9
  - NIST-800-53-AC-7(a)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.6
  - CJIS-5.5.3
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80667-9
  - NIST-800-53-AC-7(a)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.6
  - CJIS-5.5.3
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock preauth fail_interval before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_interval
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80669-5
  - NIST-800-53-AC-7(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_interval | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add fail_interval argument to auth pam_faillock preauth
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_interval
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80669-5
  - NIST-800-53-AC-7(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_interval | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock aufthfail fail_interval after pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}
    state: after
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_interval
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80669-5
  - NIST-800-53-AC-7(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_interval | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add fail_interval argument to auth pam_faillock authfail
  pamd:
    name: '{{ item }}'
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_interval
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80669-5
  - NIST-800-53-AC-7(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_interval | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_interval
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80669-5
  - NIST-800-53-AC-7(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_interval | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Do not allow users to reuse recent passwords - system-auth (change)
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: ^(password\s+sufficient\s+pam_unix\.so\s.*remember\s*=\s*)(\S+)(.*)$
    replace: \g<1>{{ var_password_pam_unix_remember }}\g<3>
  tags:
  - accounts_password_pam_unix_remember
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80666-1
  - NIST-800-53-IA-5(f)
  - NIST-800-53-IA-5(1)(e)
  - NIST-800-171-3.5.8
  - PCI-DSS-Req-8.2.5
  - CJIS-5.6.2.1.1
  when:
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - accounts_password_pam_unix_remember | bool
  - low_complexity | bool

- name: Do not allow users to reuse recent passwords - system-auth (add)
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: ^password\s+sufficient\s+pam_unix\.so\s(?!.*remember\s*=\s*).*$
    replace: \g<0> remember={{ var_password_pam_unix_remember }}
  tags:
  - accounts_password_pam_unix_remember
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80666-1
  - NIST-800-53-IA-5(f)
  - NIST-800-53-IA-5(1)(e)
  - NIST-800-171-3.5.8
  - PCI-DSS-Req-8.2.5
  - CJIS-5.6.2.1.1
  when:
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - accounts_password_pam_unix_remember | bool
  - low_complexity | bool

- name: Prevent Log In to Accounts With Empty Password - system-auth
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: nullok
  tags:
  - no_empty_passwords
  - high_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80841-0
  - NIST-800-53-AC-6
  - NIST-800-53-IA-5(b)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - PCI-DSS-Req-8.2.3
  - CJIS-5.5.2
  when:
  - no_empty_passwords | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - configure_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Prevent Log In to Accounts With Empty Password - password-auth
  replace:
    dest: /etc/pam.d/password-auth
    follow: true
    regexp: nullok
  tags:
  - no_empty_passwords
  - high_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80841-0
  - NIST-800-53-AC-6
  - NIST-800-53-IA-5(b)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - PCI-DSS-Req-8.2.3
  - CJIS-5.5.2
  when:
  - no_empty_passwords | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - configure_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Restrict Virtual Console Root Logins
  lineinfile:
    dest: /etc/securetty
    regexp: ^vc
    state: absent
  tags:
  - securetty_root_login_console_only
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80864-2
  - NIST-800-53-AC-6(2)
  - NIST-800-53-IA-2
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - securetty_root_login_console_only | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Set Password Minimum Length in login.defs
  lineinfile:
    dest: /etc/login.defs
    regexp: ^PASS_MIN_LEN *[0-9]*
    state: present
    line: PASS_MIN_LEN        {{ var_accounts_password_minlen_login_defs }}
  tags:
  - accounts_password_minlen_login_defs
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80652-1
  - NIST-800-53-IA-5(f)
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-171-3.5.7
  - CJIS-5.6.2.1
  when:
  - accounts_password_minlen_login_defs | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: check pti argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*pti=' /etc/default/grub
  failed_when: false
  register: argcheck
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_pti_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_pti_argument
  - high_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-82194-2

- name: replace existing pti argument
  replace:
    path: /etc/default/grub
    regexp: pti=.
    replace: pti=on
  when:
  - argcheck.rc == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_pti_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_pti_argument
  - high_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-82194-2

- name: add pti argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 pti=on"
  when:
  - argcheck.rc != 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_pti_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_pti_argument
  - high_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-82194-2

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="pti=on"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_pti_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_pti_argument
  - high_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-82194-2
